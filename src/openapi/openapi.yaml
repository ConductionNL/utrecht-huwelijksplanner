openapi: 3.0.0
info:
  title: "Common Gateway"
  description: "The Common Gateway is a further Dutch development of the European API Platform. API Platform is a project of Les Tilleus and, in itself, an extension of the Symfony framework. API Platform is a tool for delivering APIs based on standardized documentation and is used for various French and German government projects. Including Digital state, a precursor to Xroute, GOV.UK and Common Ground. The project is now part of joinup.eu (the European equivalent of Common Ground)."
  version: 1.0.3
servers:
  - url: "http://localhost"
    description: "The kubernetes server"
paths:
  "/brp/ingeschrevenpersonen/{id}":
    get:
      operationId: ingeschrevenpersoon-get-item
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
    put:
      operationId: ingeschrevenpersoon-put-item
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
    patch:
      operationId: ingeschrevenpersoon-patch-item
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
    delete:
      operationId: ingeschrevenpersoon-delete-item
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /brp/ingeschrevenpersonen:
    get:
      operationId: ingeschrevenpersoon-get-collection
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
    post:
      operationId: ingeschrevenpersoon-post-item
      summary: IngeschrevenPersoon
      tags:
        - ingeschrevenpersoon
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/IngeschrevenPersoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/IngeschrevenPersoon"
  "/hp/assents/{id}":
    get:
      operationId: assent-get-item
      summary: Assent
      tags:
        - assent
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assent"
            application/xml:
              schema:
                $ref: "#/components/schemas/Assent"
    put:
      operationId: assent-put-item
      summary: Assent
      tags:
        - assent
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assent"
          application/xml:
            schema:
              $ref: "#/components/schemas/Assent"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assent"
            application/xml:
              schema:
                $ref: "#/components/schemas/Assent"
    patch:
      operationId: assent-patch-item
      summary: Assent
      tags:
        - assent
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assent"
          application/xml:
            schema:
              $ref: "#/components/schemas/Assent"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assent"
            application/xml:
              schema:
                $ref: "#/components/schemas/Assent"
    delete:
      operationId: assent-delete-item
      summary: Assent
      tags:
        - assent
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/assents:
    get:
      operationId: assent-get-collection
      summary: Assent
      tags:
        - assent
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assent"
            application/xml:
              schema:
                $ref: "#/components/schemas/Assent"
    post:
      operationId: assent-post-item
      summary: Assent
      tags:
        - assent
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assent"
          application/xml:
            schema:
              $ref: "#/components/schemas/Assent"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assent"
            application/xml:
              schema:
                $ref: "#/components/schemas/Assent"
  "/hp/calendars/{id}":
    get:
      operationId: calendar-get-item
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
            application/xml:
              schema:
                $ref: "#/components/schemas/Calendar"
    put:
      operationId: calendar-put-item
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Calendar"
          application/xml:
            schema:
              $ref: "#/components/schemas/Calendar"
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
            application/xml:
              schema:
                $ref: "#/components/schemas/Calendar"
    patch:
      operationId: calendar-patch-item
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Calendar"
          application/xml:
            schema:
              $ref: "#/components/schemas/Calendar"
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
            application/xml:
              schema:
                $ref: "#/components/schemas/Calendar"
    delete:
      operationId: calendar-delete-item
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/calendars:
    get:
      operationId: calendar-get-collection
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
            application/xml:
              schema:
                $ref: "#/components/schemas/Calendar"
    post:
      operationId: calendar-post-item
      summary: Calendar
      tags:
        - calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Calendar"
          application/xml:
            schema:
              $ref: "#/components/schemas/Calendar"
      responses:
        200:
          description: "A Calendar is a collection of event ties to an unque person or resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
            application/xml:
              schema:
                $ref: "#/components/schemas/Calendar"
  "/hp/availabilities/{id}":
    get:
      operationId: availability-get-item
      summary: Availability
      tags:
        - availability
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
            application/xml:
              schema:
                $ref: "#/components/schemas/Availability"
    put:
      operationId: availability-put-item
      summary: Availability
      tags:
        - availability
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Availability"
          application/xml:
            schema:
              $ref: "#/components/schemas/Availability"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
            application/xml:
              schema:
                $ref: "#/components/schemas/Availability"
    patch:
      operationId: availability-patch-item
      summary: Availability
      tags:
        - availability
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Availability"
          application/xml:
            schema:
              $ref: "#/components/schemas/Availability"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
            application/xml:
              schema:
                $ref: "#/components/schemas/Availability"
    delete:
      operationId: availability-delete-item
      summary: Availability
      tags:
        - availability
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/availabilities:
    get:
      operationId: availability-get-collection
      summary: Availability
      tags:
        - availability
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
            application/xml:
              schema:
                $ref: "#/components/schemas/Availability"
    post:
      operationId: availability-post-item
      summary: Availability
      tags:
        - availability
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Availability"
          application/xml:
            schema:
              $ref: "#/components/schemas/Availability"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
            application/xml:
              schema:
                $ref: "#/components/schemas/Availability"
  "/hp/huwelijk/{id}":
    get:
      operationId: huwelijk-get-item
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Huwelijk"
            application/xml:
              schema:
                $ref: "#/components/schemas/Huwelijk"
    put:
      operationId: huwelijk-put-item
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Huwelijk"
          application/xml:
            schema:
              $ref: "#/components/schemas/Huwelijk"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Huwelijk"
            application/xml:
              schema:
                $ref: "#/components/schemas/Huwelijk"
    patch:
      operationId: huwelijk-patch-item
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Huwelijk"
          application/xml:
            schema:
              $ref: "#/components/schemas/Huwelijk"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Huwelijk"
            application/xml:
              schema:
                $ref: "#/components/schemas/Huwelijk"
    delete:
      operationId: huwelijk-delete-item
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/huwelijk:
    get:
      operationId: huwelijk-get-collection
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Huwelijk"
            application/xml:
              schema:
                $ref: "#/components/schemas/Huwelijk"
    post:
      operationId: huwelijk-post-item
      summary: Huwelijk
      tags:
        - huwelijk
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Huwelijk"
          application/xml:
            schema:
              $ref: "#/components/schemas/Huwelijk"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Huwelijk"
            application/xml:
              schema:
                $ref: "#/components/schemas/Huwelijk"
  "/hp/medewerkers/{id}":
    get:
      operationId: medewerker-get-item
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medewerker"
            application/xml:
              schema:
                $ref: "#/components/schemas/Medewerker"
    put:
      operationId: medewerker-put-item
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medewerker"
          application/xml:
            schema:
              $ref: "#/components/schemas/Medewerker"
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medewerker"
            application/xml:
              schema:
                $ref: "#/components/schemas/Medewerker"
    patch:
      operationId: medewerker-patch-item
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medewerker"
          application/xml:
            schema:
              $ref: "#/components/schemas/Medewerker"
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medewerker"
            application/xml:
              schema:
                $ref: "#/components/schemas/Medewerker"
    delete:
      operationId: medewerker-delete-item
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/medewerkers:
    get:
      operationId: medewerker-get-collection
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medewerker"
            application/xml:
              schema:
                $ref: "#/components/schemas/Medewerker"
    post:
      operationId: medewerker-post-item
      summary: Medewerker
      tags:
        - medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medewerker"
          application/xml:
            schema:
              $ref: "#/components/schemas/Medewerker"
      responses:
        200:
          description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medewerker"
            application/xml:
              schema:
                $ref: "#/components/schemas/Medewerker"
  "/hp/producten/{id}":
    get:
      operationId: sdgproduct-get-item
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SDGProduct"
            application/xml:
              schema:
                $ref: "#/components/schemas/SDGProduct"
    put:
      operationId: sdgproduct-put-item
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SDGProduct"
          application/xml:
            schema:
              $ref: "#/components/schemas/SDGProduct"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SDGProduct"
            application/xml:
              schema:
                $ref: "#/components/schemas/SDGProduct"
    patch:
      operationId: sdgproduct-patch-item
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SDGProduct"
          application/xml:
            schema:
              $ref: "#/components/schemas/SDGProduct"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SDGProduct"
            application/xml:
              schema:
                $ref: "#/components/schemas/SDGProduct"
    delete:
      operationId: sdgproduct-delete-item
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/producten:
    get:
      operationId: sdgproduct-get-collection
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SDGProduct"
            application/xml:
              schema:
                $ref: "#/components/schemas/SDGProduct"
    post:
      operationId: sdgproduct-post-item
      summary: SDGProduct
      tags:
        - sdgproduct
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SDGProduct"
          application/xml:
            schema:
              $ref: "#/components/schemas/SDGProduct"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SDGProduct"
            application/xml:
              schema:
                $ref: "#/components/schemas/SDGProduct"
  "/hp/accommodations/{id}":
    get:
      operationId: accommodation-get-item
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
            application/xml:
              schema:
                $ref: "#/components/schemas/Accommodation"
    put:
      operationId: accommodation-put-item
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accommodation"
          application/xml:
            schema:
              $ref: "#/components/schemas/Accommodation"
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
            application/xml:
              schema:
                $ref: "#/components/schemas/Accommodation"
    patch:
      operationId: accommodation-patch-item
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accommodation"
          application/xml:
            schema:
              $ref: "#/components/schemas/Accommodation"
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
            application/xml:
              schema:
                $ref: "#/components/schemas/Accommodation"
    delete:
      operationId: accommodation-delete-item
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/accommodations:
    get:
      operationId: accommodation-get-collection
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
            application/xml:
              schema:
                $ref: "#/components/schemas/Accommodation"
    post:
      operationId: accommodation-post-item
      summary: Accommodation
      tags:
        - accommodation
      description: "A room or other accommodation that can facilitate people."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accommodation"
          application/xml:
            schema:
              $ref: "#/components/schemas/Accommodation"
      responses:
        200:
          description: "A room or other accommodation that can facilitate people."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
            application/xml:
              schema:
                $ref: "#/components/schemas/Accommodation"
  "/hp/messages/{id}":
    get:
      operationId: message-get-item
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/xml:
              schema:
                $ref: "#/components/schemas/Message"
    put:
      operationId: message-put-item
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
          application/xml:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/xml:
              schema:
                $ref: "#/components/schemas/Message"
    patch:
      operationId: message-patch-item
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
          application/xml:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/xml:
              schema:
                $ref: "#/components/schemas/Message"
    delete:
      operationId: message-delete-item
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/messages:
    get:
      operationId: message-get-collection
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/xml:
              schema:
                $ref: "#/components/schemas/Message"
    post:
      operationId: message-post-item
      summary: Message
      tags:
        - message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
          application/xml:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        200:
          description: "A  message to be send to a spefic recipient or list troug a message service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/xml:
              schema:
                $ref: "#/components/schemas/Message"
  "/hp/send_lists/{id}":
    get:
      operationId: sendlist-get-item
      summary: SendList
      tags:
        - sendlist
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendList"
    put:
      operationId: sendlist-put-item
      summary: SendList
      tags:
        - sendlist
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendList"
          application/xml:
            schema:
              $ref: "#/components/schemas/SendList"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendList"
    patch:
      operationId: sendlist-patch-item
      summary: SendList
      tags:
        - sendlist
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendList"
          application/xml:
            schema:
              $ref: "#/components/schemas/SendList"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendList"
    delete:
      operationId: sendlist-delete-item
      summary: SendList
      tags:
        - sendlist
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/send_lists:
    get:
      operationId: sendlist-get-collection
      summary: SendList
      tags:
        - sendlist
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendList"
    post:
      operationId: sendlist-post-item
      summary: SendList
      tags:
        - sendlist
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendList"
          application/xml:
            schema:
              $ref: "#/components/schemas/SendList"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendList"
  "/hp/services/{id}":
    get:
      operationId: service-get-item
      summary: Service
      tags:
        - service
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            application/xml:
              schema:
                $ref: "#/components/schemas/Service"
    put:
      operationId: service-put-item
      summary: Service
      tags:
        - service
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
          application/xml:
            schema:
              $ref: "#/components/schemas/Service"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            application/xml:
              schema:
                $ref: "#/components/schemas/Service"
    patch:
      operationId: service-patch-item
      summary: Service
      tags:
        - service
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
          application/xml:
            schema:
              $ref: "#/components/schemas/Service"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            application/xml:
              schema:
                $ref: "#/components/schemas/Service"
    delete:
      operationId: service-delete-item
      summary: Service
      tags:
        - service
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/services:
    get:
      operationId: service-get-collection
      summary: Service
      tags:
        - service
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            application/xml:
              schema:
                $ref: "#/components/schemas/Service"
    post:
      operationId: service-post-item
      summary: Service
      tags:
        - service
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
          application/xml:
            schema:
              $ref: "#/components/schemas/Service"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            application/xml:
              schema:
                $ref: "#/components/schemas/Service"
  "/hp/subscribers/{id}":
    get:
      operationId: subscriber-get-item
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
            application/xml:
              schema:
                $ref: "#/components/schemas/Subscriber"
    put:
      operationId: subscriber-put-item
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
          application/xml:
            schema:
              $ref: "#/components/schemas/Subscriber"
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
            application/xml:
              schema:
                $ref: "#/components/schemas/Subscriber"
    patch:
      operationId: subscriber-patch-item
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
          application/xml:
            schema:
              $ref: "#/components/schemas/Subscriber"
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
            application/xml:
              schema:
                $ref: "#/components/schemas/Subscriber"
    delete:
      operationId: subscriber-delete-item
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /hp/subscribers:
    get:
      operationId: subscriber-get-collection
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
            application/xml:
              schema:
                $ref: "#/components/schemas/Subscriber"
    post:
      operationId: subscriber-post-item
      summary: Subscriber
      tags:
        - subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
          application/xml:
            schema:
              $ref: "#/components/schemas/Subscriber"
      responses:
        200:
          description: "SendList is a way for Applications to send messages through email or phone."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
            application/xml:
              schema:
                $ref: "#/components/schemas/Subscriber"
  /hp/calendar/availabilitycheck:
    post:
      operationId: availabilitycheck-post-item
      summary: AvailabilityCheck
      tags:
        - availabilitycheck
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityCheck"
          application/xml:
            schema:
              $ref: "#/components/schemas/AvailabilityCheck"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailabilityCheck"
            application/xml:
              schema:
                $ref: "#/components/schemas/AvailabilityCheck"
  "/klanten/{id}":
    get:
      operationId: klant-get-item
      summary: Klant
      tags:
        - klant
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klant"
            application/xml:
              schema:
                $ref: "#/components/schemas/Klant"
    put:
      operationId: klant-put-item
      summary: Klant
      tags:
        - klant
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Klant"
          application/xml:
            schema:
              $ref: "#/components/schemas/Klant"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klant"
            application/xml:
              schema:
                $ref: "#/components/schemas/Klant"
    patch:
      operationId: klant-patch-item
      summary: Klant
      tags:
        - klant
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Klant"
          application/xml:
            schema:
              $ref: "#/components/schemas/Klant"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klant"
            application/xml:
              schema:
                $ref: "#/components/schemas/Klant"
    delete:
      operationId: klant-delete-item
      summary: Klant
      tags:
        - klant
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /klanten:
    get:
      operationId: klant-get-collection
      summary: Klant
      tags:
        - klant
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klant"
            application/xml:
              schema:
                $ref: "#/components/schemas/Klant"
    post:
      operationId: klant-post-item
      summary: Klant
      tags:
        - klant
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Klant"
          application/xml:
            schema:
              $ref: "#/components/schemas/Klant"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klant"
            application/xml:
              schema:
                $ref: "#/components/schemas/Klant"
  "/adressen/{id}":
    get:
      operationId: klantadres-get-item
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantAdres"
    put:
      operationId: klantadres-put-item
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantAdres"
    patch:
      operationId: klantadres-patch-item
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantAdres"
    delete:
      operationId: klantadres-delete-item
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /adressen:
    get:
      operationId: klantadres-get-collection
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantAdres"
    post:
      operationId: klantadres-post-item
      summary: KlantAdres
      tags:
        - klantadres
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantAdres"
  "/contactmomenten/{id}":
    get:
      operationId: contactmoment-get-item
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Contactmoment"
    put:
      operationId: contactmoment-put-item
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Contactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Contactmoment"
    patch:
      operationId: contactmoment-patch-item
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Contactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Contactmoment"
    delete:
      operationId: contactmoment-delete-item
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /contactmomenten:
    get:
      operationId: contactmoment-get-collection
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Contactmoment"
    post:
      operationId: contactmoment-post-item
      summary: Contactmoment
      tags:
        - contactmoment
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Contactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Contactmoment"
  "/klantcontactmomenten/{id}":
    get:
      operationId: klantcontactmoment-get-item
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
    put:
      operationId: klantcontactmoment-put-item
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
    patch:
      operationId: klantcontactmoment-patch-item
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
    delete:
      operationId: klantcontactmoment-delete-item
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /klantcontactmomenten:
    get:
      operationId: klantcontactmoment-get-collection
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
    post:
      operationId: klantcontactmoment-post-item
      summary: KlantContactmoment
      tags:
        - klantcontactmoment
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContactmoment"
  "/objectcontactmomenten/{id}":
    get:
      operationId: objectcontactmoment-get-item
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
    put:
      operationId: objectcontactmoment-put-item
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
    patch:
      operationId: objectcontactmoment-patch-item
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
    delete:
      operationId: objectcontactmoment-delete-item
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /objectcontactmomenten:
    get:
      operationId: objectcontactmoment-get-collection
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
    post:
      operationId: objectcontactmoment-post-item
      summary: ObjectContactmoment
      tags:
        - objectcontactmoment
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectContactmoment"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectContactmoment"
  "/emails/{id}":
    get:
      operationId: klantemail-get-item
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantEmail"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantEmail"
    put:
      operationId: klantemail-put-item
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantEmail"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantEmail"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantEmail"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantEmail"
    patch:
      operationId: klantemail-patch-item
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantEmail"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantEmail"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantEmail"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantEmail"
    delete:
      operationId: klantemail-delete-item
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /emails:
    get:
      operationId: klantemail-get-collection
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantEmail"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantEmail"
    post:
      operationId: klantemail-post-item
      summary: KlantEmail
      tags:
        - klantemail
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantEmail"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantEmail"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantEmail"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantEmail"
  "/telefoons/{id}":
    get:
      operationId: klanttelefoon-get-item
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
    put:
      operationId: klanttelefoon-put-item
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
    patch:
      operationId: klanttelefoon-patch-item
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
    delete:
      operationId: klanttelefoon-delete-item
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /telefoons:
    get:
      operationId: klanttelefoon-get-collection
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
    post:
      operationId: klanttelefoon-post-item
      summary: KlantTelefoon
      tags:
        - klanttelefoon
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantTelefoon"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantTelefoon"
  "/subjectidentificaties/{id}":
    get:
      operationId: subjectidentificatie-get-item
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
    put:
      operationId: subjectidentificatie-put-item
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
    patch:
      operationId: subjectidentificatie-patch-item
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
    delete:
      operationId: subjectidentificatie-delete-item
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /subjectidentificaties:
    get:
      operationId: subjectidentificatie-get-collection
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
    post:
      operationId: subjectidentificatie-post-item
      summary: SubjectIdentificatie
      tags:
        - subjectidentificatie
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubjectIdentificatie"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubjectIdentificatie"
  "/verblijfadressen/{id}":
    get:
      operationId: verblijfadres-get-item
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
    put:
      operationId: verblijfadres-put-item
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
    patch:
      operationId: verblijfadres-patch-item
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
    delete:
      operationId: verblijfadres-delete-item
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /verblijfadressen:
    get:
      operationId: verblijfadres-get-collection
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
    post:
      operationId: verblijfadres-post-item
      summary: VerblijfAdres
      tags:
        - verblijfadres
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
          application/xml:
            schema:
              $ref: "#/components/schemas/VerblijfAdres"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
            application/xml:
              schema:
                $ref: "#/components/schemas/VerblijfAdres"
  "/subverblijfadressen/{id}":
    get:
      operationId: subverblijfbuitenland-get-item
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
    put:
      operationId: subverblijfbuitenland-put-item
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
    patch:
      operationId: subverblijfbuitenland-patch-item
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
    delete:
      operationId: subverblijfbuitenland-delete-item
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /subverblijfadressen:
    get:
      operationId: subverblijfbuitenland-get-collection
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
    post:
      operationId: subverblijfbuitenland-post-item
      summary: SubVerblijfBuitenland
      tags:
        - subverblijfbuitenland
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubVerblijfBuitenland"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubVerblijfBuitenland"
  "/zrc/v1/klantcontacten/{id}":
    get:
      operationId: klantcontact-get-item
      summary: KlantContact
      tags:
        - klantcontact
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContact"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContact"
  /zrc/v1/klantcontacten:
    get:
      operationId: klantcontact-get-collection
      summary: KlantContact
      tags:
        - klantcontact
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContact"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContact"
    post:
      operationId: klantcontact-post-item
      summary: KlantContact
      tags:
        - klantcontact
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KlantContact"
          application/xml:
            schema:
              $ref: "#/components/schemas/KlantContact"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KlantContact"
            application/xml:
              schema:
                $ref: "#/components/schemas/KlantContact"
  "/zrc/v1/resultaten/{id}":
    get:
      operationId: resultaat-get-item
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultaat"
            application/xml:
              schema:
                $ref: "#/components/schemas/Resultaat"
    put:
      operationId: resultaat-put-item
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resultaat"
          application/xml:
            schema:
              $ref: "#/components/schemas/Resultaat"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultaat"
            application/xml:
              schema:
                $ref: "#/components/schemas/Resultaat"
    patch:
      operationId: resultaat-patch-item
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resultaat"
          application/xml:
            schema:
              $ref: "#/components/schemas/Resultaat"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultaat"
            application/xml:
              schema:
                $ref: "#/components/schemas/Resultaat"
    delete:
      operationId: resultaat-delete-item
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/resultaten:
    get:
      operationId: resultaat-get-collection
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultaat"
            application/xml:
              schema:
                $ref: "#/components/schemas/Resultaat"
    post:
      operationId: resultaat-post-item
      summary: Resultaat
      tags:
        - resultaat
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resultaat"
          application/xml:
            schema:
              $ref: "#/components/schemas/Resultaat"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultaat"
            application/xml:
              schema:
                $ref: "#/components/schemas/Resultaat"
  "/zrc/v1/rollen/{id}":
    get:
      operationId: rol-get-item
      summary: Rol
      tags:
        - rol
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rol"
    delete:
      operationId: rol-delete-item
      summary: Rol
      tags:
        - rol
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/rollen:
    get:
      operationId: rol-get-collection
      summary: Rol
      tags:
        - rol
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rol"
    post:
      operationId: rol-post-item
      summary: Rol
      tags:
        - rol
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rol"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rol"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rol"
  "/zrc/v1/statussen/{id}":
    get:
      operationId: status-get-item
      summary: Status
      tags:
        - status
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
            application/xml:
              schema:
                $ref: "#/components/schemas/Status"
  /zrc/v1/statussen:
    get:
      operationId: status-get-collection
      summary: Status
      tags:
        - status
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
            application/xml:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      operationId: status-post-item
      summary: Status
      tags:
        - status
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
          application/xml:
            schema:
              $ref: "#/components/schemas/Status"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
            application/xml:
              schema:
                $ref: "#/components/schemas/Status"
  "/zrc/v1/zaakinformatieobjecten/{id}":
    get:
      operationId: zaakinformatieobject-get-item
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
    put:
      operationId: zaakinformatieobject-put-item
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
    patch:
      operationId: zaakinformatieobject-patch-item
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
    delete:
      operationId: zaakinformatieobject-delete-item
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/zaakinformatieobjecten:
    get:
      operationId: zaakinformatieobject-get-collection
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
    post:
      operationId: zaakinformatieobject-post-item
      summary: ZaakInformatieObject
      tags:
        - zaakinformatieobject
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakInformatieObject"
  "/zrc/v1/zaken/{id}":
    get:
      operationId: zaak-get-item
      summary: Zaak
      tags:
        - zaak
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zaak"
            application/xml:
              schema:
                $ref: "#/components/schemas/Zaak"
    put:
      operationId: zaak-put-item
      summary: Zaak
      tags:
        - zaak
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zaak"
          application/xml:
            schema:
              $ref: "#/components/schemas/Zaak"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zaak"
            application/xml:
              schema:
                $ref: "#/components/schemas/Zaak"
    patch:
      operationId: zaak-patch-item
      summary: Zaak
      tags:
        - zaak
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zaak"
          application/xml:
            schema:
              $ref: "#/components/schemas/Zaak"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zaak"
            application/xml:
              schema:
                $ref: "#/components/schemas/Zaak"
    delete:
      operationId: zaak-delete-item
      summary: Zaak
      tags:
        - zaak
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/zaken:
    get:
      operationId: zaak-get-collection
      summary: Zaak
      tags:
        - zaak
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zaak"
            application/xml:
              schema:
                $ref: "#/components/schemas/Zaak"
    post:
      operationId: zaak-post-item
      summary: Zaak
      tags:
        - zaak
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zaak"
          application/xml:
            schema:
              $ref: "#/components/schemas/Zaak"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zaak"
            application/xml:
              schema:
                $ref: "#/components/schemas/Zaak"
  "/zrc/v1/zaakobjecten/{id}":
    get:
      operationId: zaakobject-get-item
      summary: ZaakObject
      tags:
        - zaakobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakObject"
  /zrc/v1/zaakobjecten:
    get:
      operationId: zaakobject-get-collection
      summary: ZaakObject
      tags:
        - zaakobject
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakObject"
    post:
      operationId: zaakobject-post-item
      summary: ZaakObject
      tags:
        - zaakobject
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakObject"
  "/zrc/v1/zaakeigenschappen/{id}":
    get:
      operationId: zaakeigenschap-get-item
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
    put:
      operationId: zaakeigenschap-put-item
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
    patch:
      operationId: zaakeigenschap-patch-item
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
    delete:
      operationId: zaakeigenschap-delete-item
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/zaakeigenschappen:
    get:
      operationId: zaakeigenschap-get-collection
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
    post:
      operationId: zaakeigenschap-post-item
      summary: ZaakEigenschap
      tags:
        - zaakeigenschap
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakEigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakEigenschap"
  "/zrc/v1/zaakbesluiten/{id}":
    get:
      operationId: zaakbesluit-get-item
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
    put:
      operationId: zaakbesluit-put-item
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
    patch:
      operationId: zaakbesluit-patch-item
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
    delete:
      operationId: zaakbesluit-delete-item
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /zrc/v1/zaakbesluiten:
    get:
      operationId: zaakbesluit-get-collection
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
    post:
      operationId: zaakbesluit-post-item
      summary: ZaakBesluit
      tags:
        - zaakbesluit
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakBesluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakBesluit"
  "/ztc/v1/besluittypen/{id}":
    get:
      operationId: besluittype-get-item
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitType"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitType"
    put:
      operationId: besluittype-put-item
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BesluitType"
          application/xml:
            schema:
              $ref: "#/components/schemas/BesluitType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitType"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitType"
    patch:
      operationId: besluittype-patch-item
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BesluitType"
          application/xml:
            schema:
              $ref: "#/components/schemas/BesluitType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitType"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitType"
    delete:
      operationId: besluittype-delete-item
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/besluittypen:
    get:
      operationId: besluittype-get-collection
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitType"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitType"
    post:
      operationId: besluittype-post-item
      summary: BesluitType
      tags:
        - besluittype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BesluitType"
          application/xml:
            schema:
              $ref: "#/components/schemas/BesluitType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitType"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitType"
  "/ztc/v1/catalogussen/{id}":
    get:
      operationId: catalogus-get-item
      summary: Catalogus
      tags:
        - catalogus
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalogus"
            application/xml:
              schema:
                $ref: "#/components/schemas/Catalogus"
  /ztc/v1/catalogussen:
    get:
      operationId: catalogus-get-collection
      summary: Catalogus
      tags:
        - catalogus
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalogus"
            application/xml:
              schema:
                $ref: "#/components/schemas/Catalogus"
    post:
      operationId: catalogus-post-item
      summary: Catalogus
      tags:
        - catalogus
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalogus"
          application/xml:
            schema:
              $ref: "#/components/schemas/Catalogus"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalogus"
            application/xml:
              schema:
                $ref: "#/components/schemas/Catalogus"
  "/ztc/v1/eigenschappen/{id}":
    get:
      operationId: eigenschap-get-item
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Eigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/Eigenschap"
    put:
      operationId: eigenschap-put-item
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Eigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/Eigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Eigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/Eigenschap"
    patch:
      operationId: eigenschap-patch-item
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Eigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/Eigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Eigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/Eigenschap"
    delete:
      operationId: eigenschap-delete-item
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/eigenschappen:
    get:
      operationId: eigenschap-get-collection
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Eigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/Eigenschap"
    post:
      operationId: eigenschap-post-item
      summary: Eigenschap
      tags:
        - eigenschap
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Eigenschap"
          application/xml:
            schema:
              $ref: "#/components/schemas/Eigenschap"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Eigenschap"
            application/xml:
              schema:
                $ref: "#/components/schemas/Eigenschap"
  "/ztc/v1/informatieobjecttypen/{id}":
    get:
      operationId: informatieobjecttype-get-item
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
    put:
      operationId: informatieobjecttype-put-item
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
    patch:
      operationId: informatieobjecttype-patch-item
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
    delete:
      operationId: informatieobjecttype-delete-item
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/informatieobjecttypen:
    get:
      operationId: informatieobjecttype-get-collection
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
    post:
      operationId: informatieobjecttype-post-item
      summary: InformatieObjectType
      tags:
        - informatieobjecttype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/InformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/InformatieObjectType"
  "/ztc/v1/resultaattypen/{id}":
    get:
      operationId: resultaattype-get-item
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultaatType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResultaatType"
    put:
      operationId: resultaattype-put-item
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultaatType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ResultaatType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultaatType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResultaatType"
    patch:
      operationId: resultaattype-patch-item
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultaatType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ResultaatType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultaatType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResultaatType"
    delete:
      operationId: resultaattype-delete-item
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/resultaattypen:
    get:
      operationId: resultaattype-get-collection
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultaatType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResultaatType"
    post:
      operationId: resultaattype-post-item
      summary: ResultaatType
      tags:
        - resultaattype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultaatType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ResultaatType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultaatType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResultaatType"
  "/ztc/v1/roltypen/{id}":
    get:
      operationId: roltype-get-item
      summary: RolType
      tags:
        - roltype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolType"
            application/xml:
              schema:
                $ref: "#/components/schemas/RolType"
    put:
      operationId: roltype-put-item
      summary: RolType
      tags:
        - roltype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolType"
          application/xml:
            schema:
              $ref: "#/components/schemas/RolType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolType"
            application/xml:
              schema:
                $ref: "#/components/schemas/RolType"
    patch:
      operationId: roltype-patch-item
      summary: RolType
      tags:
        - roltype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolType"
          application/xml:
            schema:
              $ref: "#/components/schemas/RolType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolType"
            application/xml:
              schema:
                $ref: "#/components/schemas/RolType"
    delete:
      operationId: roltype-delete-item
      summary: RolType
      tags:
        - roltype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/roltypen:
    get:
      operationId: roltype-get-collection
      summary: RolType
      tags:
        - roltype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolType"
            application/xml:
              schema:
                $ref: "#/components/schemas/RolType"
    post:
      operationId: roltype-post-item
      summary: RolType
      tags:
        - roltype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolType"
          application/xml:
            schema:
              $ref: "#/components/schemas/RolType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolType"
            application/xml:
              schema:
                $ref: "#/components/schemas/RolType"
  "/ztc/v1/statustypen/{id}":
    get:
      operationId: statustype-get-item
      summary: StatusType
      tags:
        - statustype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusType"
            application/xml:
              schema:
                $ref: "#/components/schemas/StatusType"
    put:
      operationId: statustype-put-item
      summary: StatusType
      tags:
        - statustype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusType"
          application/xml:
            schema:
              $ref: "#/components/schemas/StatusType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusType"
            application/xml:
              schema:
                $ref: "#/components/schemas/StatusType"
    patch:
      operationId: statustype-patch-item
      summary: StatusType
      tags:
        - statustype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusType"
          application/xml:
            schema:
              $ref: "#/components/schemas/StatusType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusType"
            application/xml:
              schema:
                $ref: "#/components/schemas/StatusType"
    delete:
      operationId: statustype-delete-item
      summary: StatusType
      tags:
        - statustype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/statustypen:
    get:
      operationId: statustype-get-collection
      summary: StatusType
      tags:
        - statustype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusType"
            application/xml:
              schema:
                $ref: "#/components/schemas/StatusType"
    post:
      operationId: statustype-post-item
      summary: StatusType
      tags:
        - statustype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusType"
          application/xml:
            schema:
              $ref: "#/components/schemas/StatusType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusType"
            application/xml:
              schema:
                $ref: "#/components/schemas/StatusType"
  "/ztc/v1/zaaktypen/{id}":
    get:
      operationId: zaaktype-get-item
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakType"
    put:
      operationId: zaaktype-put-item
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakType"
    patch:
      operationId: zaaktype-patch-item
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakType"
    delete:
      operationId: zaaktype-delete-item
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/zaaktypen:
    get:
      operationId: zaaktype-get-collection
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakType"
    post:
      operationId: zaaktype-post-item
      summary: ZaakType
      tags:
        - zaaktype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakType"
  "/ztc/v1/zaaktype-informatieobjecttypen/{id}":
    get:
      operationId: zaaktypeinformatieobjecttype-get-item
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
    put:
      operationId: zaaktypeinformatieobjecttype-put-item
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
    patch:
      operationId: zaaktypeinformatieobjecttype-patch-item
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
    delete:
      operationId: zaaktypeinformatieobjecttype-delete-item
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /ztc/v1/zaaktype-informatieobjecttypen:
    get:
      operationId: zaaktypeinformatieobjecttype-get-collection
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
    post:
      operationId: zaaktypeinformatieobjecttype-post-item
      summary: ZaakTypeInformatieObjectType
      tags:
        - zaaktypeinformatieobjecttype
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
          application/xml:
            schema:
              $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
            application/xml:
              schema:
                $ref: "#/components/schemas/ZaakTypeInformatieObjectType"
  "/brc/v1/besluiten/{id}":
    get:
      operationId: besluit-get-item
      summary: Besluit
      tags:
        - besluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Besluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/Besluit"
    put:
      operationId: besluit-put-item
      summary: Besluit
      tags:
        - besluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Besluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/Besluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Besluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/Besluit"
    patch:
      operationId: besluit-patch-item
      summary: Besluit
      tags:
        - besluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Besluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/Besluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Besluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/Besluit"
    delete:
      operationId: besluit-delete-item
      summary: Besluit
      tags:
        - besluit
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /brc/v1/besluiten:
    get:
      operationId: besluit-get-collection
      summary: Besluit
      tags:
        - besluit
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Besluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/Besluit"
    post:
      operationId: besluit-post-item
      summary: Besluit
      tags:
        - besluit
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Besluit"
          application/xml:
            schema:
              $ref: "#/components/schemas/Besluit"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Besluit"
            application/xml:
              schema:
                $ref: "#/components/schemas/Besluit"
  "/brc/v1/besluitinformatieobjecten/{id}":
    get:
      operationId: besluitinformatieobject-get-item
      summary: BesluitInformatieObject
      tags:
        - besluitinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
    delete:
      operationId: besluitinformatieobject-delete-item
      summary: BesluitInformatieObject
      tags:
        - besluitinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /brc/v1/besluitinformatieobjecten:
    get:
      operationId: besluitinformatieobject-get-collection
      summary: BesluitInformatieObject
      tags:
        - besluitinformatieobject
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
    post:
      operationId: besluitinformatieobject-post-item
      summary: BesluitInformatieObject
      tags:
        - besluitinformatieobject
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BesluitInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/BesluitInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/BesluitInformatieObject"
  "/drc/v1/enkelvoudiginformatieobjecten/{id}":
    get:
      operationId: enkelvoudiginformatieobject-get-item
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
    put:
      operationId: enkelvoudiginformatieobject-put-item
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
    patch:
      operationId: enkelvoudiginformatieobject-patch-item
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
    delete:
      operationId: enkelvoudiginformatieobject-delete-item
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /drc/v1/enkelvoudiginformatieobjecten:
    get:
      operationId: enkelvoudiginformatieobject-get-collection
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
    post:
      operationId: enkelvoudiginformatieobject-post-item
      summary: EnkelvoudigInformatieObject
      tags:
        - enkelvoudiginformatieobject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/EnkelvoudigInformatieObject"
      responses:
        200:
          description: "Serializer for the EnkelvoudigInformatieObject model"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/EnkelvoudigInformatieObject"
  "/drc/v1/gebruiksrechten/{id}":
    get:
      operationId: gebruiksrecht-get-item
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
            application/xml:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
    put:
      operationId: gebruiksrecht-put-item
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
          application/xml:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
            application/xml:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
    patch:
      operationId: gebruiksrecht-patch-item
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
          application/xml:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
            application/xml:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
    delete:
      operationId: gebruiksrecht-delete-item
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /drc/v1/gebruiksrechten:
    get:
      operationId: gebruiksrecht-get-collection
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
            application/xml:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
    post:
      operationId: gebruiksrecht-post-item
      summary: Gebruiksrecht
      tags:
        - gebruiksrecht
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
          application/xml:
            schema:
              $ref: "#/components/schemas/Gebruiksrecht"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
            application/xml:
              schema:
                $ref: "#/components/schemas/Gebruiksrecht"
  "/drc/v1/objectinformatieobjecten/{id}":
    get:
      operationId: objectinformatieobject-get-item
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
    put:
      operationId: objectinformatieobject-put-item
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
    patch:
      operationId: objectinformatieobject-patch-item
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
    delete:
      operationId: objectinformatieobject-delete-item
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /drc/v1/objectinformatieobjecten:
    get:
      operationId: objectinformatieobject-get-collection
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
    post:
      operationId: objectinformatieobject-post-item
      summary: ObjectInformatieObject
      tags:
        - objectinformatieobject
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
          application/xml:
            schema:
              $ref: "#/components/schemas/ObjectInformatieObject"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
            application/xml:
              schema:
                $ref: "#/components/schemas/ObjectInformatieObject"
  "/drc/v1/bestandsdelen/{id}":
    get:
      operationId: bestandsdeel-get-item
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
    put:
      operationId: bestandsdeel-put-item
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
          application/xml:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
    patch:
      operationId: bestandsdeel-patch-item
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
          application/xml:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
    delete:
      operationId: bestandsdeel-delete-item
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: "Object is successfully deleted"
            application/xml:
              schema:
                type: string
                example: "Object is successfully deleted"
  /drc/v1/bestandsdelen:
    get:
      operationId: bestandsdeel-get-collection
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
    post:
      operationId: bestandsdeel-post-item
      summary: BestandsDeel
      tags:
        - bestandsdeel
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
          application/xml:
            schema:
              $ref: "#/components/schemas/BestandsDeel"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BestandsDeel"
  "/drc/v1/verzendingen/{id}":
    parameters:
      - name: id
        in: path
        description: "Unieke resource identifier (UUID4)"
        required: true
        schema:
          type: string
          format: uuid
    put:
      operationId: verzending-put-item
      summary: Verzending
      tags:
        - verzending
      description: "Set gegevensgroepdata from validated nested data.\n\nUsage: include the mixin on the ModelSerializer that has gegevensgroepen."
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Verzending"
          application/xml:
            schema:
              $ref: "#/components/schemas/Verzending"
      responses:
        200:
          description: "Set gegevensgroepdata from validated nested data.\n\nUsage: include the mixin on the ModelSerializer that has gegevensgroepen."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Verzending"
            application/xml:
              schema:
                $ref: "#/components/schemas/Verzending"
components:
  schemas:
    IngeschrevenPersoon:
      $id: "https://vng.brp.nl/schemas/brp.ingeschrevenPersoon.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: IngeschrevenPersoon
      description: ""
      version: 0.1.0
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        burgerservicenummer:
          type: string
          example: "555555021"
          nullable: true
        aNummer:
          type: string
          description: "Het A-nummer van de persoon."
          nullable: true
        geheimhoudingPersoonsgegevens:
          type: boolean
          description: "Gegevens mogen niet worden verstrekt aan derden / maatschappelijke instellingen."
          nullable: true
        geslachtsaanduiding:
          type: string
          description: "Geeft aan dat de persoon een man of vrouw is, of dat het geslacht (nog) onbekend is\n* `man` - M\n* `vrouw` - V\n* `onbekend` - O"
          enum:
            - man
            - vrouw
            - onbekend
          nullable: true
        leeftijd:
          type: integer
          description: "Leeftijd in jaren op het moment van bevragen."
          example: "34"
          nullable: true
        reisdocumentnummers:
          type: array
          nullable: true
        datumEersteInschrijvingGBA:
          _list: "/admin/objects?_self.schema.id=8164b841-3cd2-4a9b-b832-09a0bf13a4c7"
          type: object
          nullable: true
        kiesrecht:
          _list: "/admin/objects?_self.schema.id=8c23e534-045b-4454-9394-54313aa646fc"
          type: object
          nullable: true
        naam:
          _list: "/admin/objects?_self.schema.id=993a0cbd-5ecf-474f-8552-6acb6dc17401"
          type: object
          nullable: true
        inOnderzoek:
          _list: "/admin/objects?_self.schema.id=ef80321f-166a-4c64-b47f-08532d101f4c"
          type: object
          nullable: true
        nationaliteiten:
          _list: "/admin/objects?_self.schema.id=af3bb9d3-c522-40b5-882a-683305db824f"
          type: object
          nullable: true
          multiple: true
        geboorte:
          _list: "/admin/objects?_self.schema.id=1a0e3927-440a-46f3-8d37-e47f9c25e701"
          type: object
          nullable: true
        opschortingBijhouding:
          _list: "/admin/objects?_self.schema.id=7312378e-d3f6-42b0-a0f3-0ca903148bc8"
          type: object
          nullable: true
        overlijden:
          _list: "/admin/objects?_self.schema.id=f4f47d06-981d-4bde-82d1-b97969d51b26"
          type: object
          nullable: true
        verblijfplaats:
          _list: "/admin/objects?_self.schema.id=77739fce-ce44-4bb6-accc-e4c4dbd28776"
          type: object
          nullable: true
        gezagsverhouding:
          _list: "/admin/objects?_self.schema.id=686b986e-5457-472d-920b-73057770dfaa"
          type: object
          nullable: true
        verblijfstitel:
          _list: "/admin/objects?_self.schema.id=e68d318b-9c45-40c8-bec8-588a7dcab7a8"
          type: object
          nullable: true
        kinderen:
          _list: "/admin/objects?_self.schema.id=470b4a69-969c-477b-ac3f-144449312d97"
          type: object
          nullable: true
          multiple: true
        ouders:
          _list: "/admin/objects?_self.schema.id=671bcd22-d337-4e2b-9ecb-a5ad499b8f6a"
          type: object
          nullable: true
          multiple: true
        partners:
          _list: "/admin/objects?_self.schema.id=0b8f2ab0-724f-4284-b77d-5be20146593e"
          type: object
          nullable: true
          multiple: true
      type: object
    Assent:
      $id: "https://huwelijksplanner.nl/schemas/hp.assent.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Assent
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      required:
        - name
        - requester
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        token:
          type: string
          description: "A secret token used to validate the assent"
          maxLength: 255
          nullable: true
        name:
          type: string
          description: "The name of this assent is displayed as a title to end users and should make clear what they are assending to"
          maxLength: 255
          nullable: true
        description:
          type: string
          description: "The description of this assent is displayed to end users as additional information and should make clear what they are assending to"
          nullable: true
        request:
          type: string
          description: "The request that this assent applies to"
          maxLength: 255
          nullable: true
        forwardUrl:
          type: string
          description: "The request that this assent applies to"
          maxLength: 255
          nullable: true
        property:
          type: string
          description: "The property of a request that this assent applies to e.g. partner in meldingvoorgenomenhuwelijk"
          maxLength: 255
          nullable: true
        process:
          type: string
          description: "The process that this assent originated from"
          maxLength: 255
          nullable: true
        contact:
          type: string
          description: "The contact that this assent applies to"
          nullable: true
        status:
          type: string
          description: "The status of this assent e.g. requested, granted, declined, cancelled, withdrawn"
          maxLength: 255
          enum:
            - requested
            - granted
            - submitted
            - declined
            - cancelled
            - withdrawn
          nullable: true
        requester:
          type: string
          description: "The organisation (RSIN) or person (BSN) that is responsible for making this assent"
          maxLength: 255
          nullable: true
        revocable:
          type: boolean
          defaultValue: "1"
          nullable: true
      type: object
    Calendar:
      $id: "https://huwelijksplanner.nl/schemas/hp.calendar.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Calendar
      description: "A Calendar is a collection of event ties to an unque person or resource."
      version: 0.1.0
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: "The name of this Calendar"
          nullable: true
        description:
          type: string
          description: "An short description of this Calendar."
          nullable: true
        organization:
          type: string
          description: "A specific commonground organisation."
          nullable: true
        person:
          type: string
          description: "A specific commonground person from the contact catalogus."
          nullable: true
        resource:
          type: string
          description: "A specific commonground resource."
          nullable: true
        todos:
          type: array
          description: "todos that belong to this Calendar."
          nullable: true
        timeZone:
          type: string
          description: "The time zone of this calendar."
          nullable: true
        events:
          _list: "/admin/objects?_self.schema.id=b908ecfa-bb15-44e6-8c10-ad35cace4693"
          type: object
          description: "Events that belong to this Calendar."
          nullable: true
          multiple: true
        schedules:
          _list: "/admin/objects?_self.schema.id=6e4a47bd-3166-4cd0-93aa-678ad9731886"
          type: object
          description: "Schedules that belong to this Calendar."
          nullable: true
          multiple: true
        freebusies:
          _list: "/admin/objects?_self.schema.id=4115c352-5397-4c32-a694-bc3b1cd9dfae"
          type: object
          description: "that belong to this Calendar."
          nullable: true
          multiple: true
        journals:
          _list: "/admin/objects?_self.schema.id=7a38c1e8-40b7-4a7c-b900-2d50e6a5f500"
          type: object
          description: "journals that belong to this Calendar."
          nullable: true
          multiple: true
        availabilities:
          _list: "/admin/objects?_self.schema.id=c27a36d4-457f-4f58-a587-014ec9a293ab"
          type: object
          description: "Availability that belong to this Calendar."
          nullable: true
          multiple: true
      type: object
    Availability:
      $id: "https://huwelijksplanner.nl/schemas/hp.availability.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Availability
      description: ""
      version: 0.1.0
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        startDate:
          type: string
          format: datetime
          description: "The start of the availability block."
          nullable: true
        endDate:
          type: string
          format: datetime
          description: "The end of the availability block."
          nullable: true
        available:
          type: boolean
          description: "Whether the block is available or not."
          nullable: true
        resource:
          type: string
          description: "A specific commonground resource"
          nullable: true
        calendar:
          type: string
          nullable: true
      type: object
    Huwelijk:
      $id: "https://huwelijksplanner.nl/schemas/hp.huwelijk.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Huwelijk
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        status:
          type: string
          example: concept
          enum:
            - concept
            - reported
            - confirmed
            - executed
            - cancelled
          defaultValue: concept
          nullable: true
        moment:
          type: string
          format: datetime
          description: "Het moment waarop het huwelijk aanvangt"
          nullable: true
        order:
          type: string
          format: url
          description: "Bij het melden van het voorgenomen huwelijk word een order gecreërd. Dit order bevat ook de betaallink. , bij ophalen kan de query parameter &extend[]=order worden gebruikt om een volledig object op te halen."
          example: "https://www.zuiddrecht.nl/api/orc/vi/ea16b2d6-3e0f-43d7-abf2-069569b2ee54"
          nullable: true
          readOnly: true
        kosten:
          type: string
          description: "Een ISO kosten opgaaf voor het huwelijk bestaande uit een drie cijferige valuta code gevold door het bedrag zonder decimalen e.g. EUR 150 voor € 1,50"
          example: "EUR 150"
          nullable: true
          readOnly: true
        partners:
          _list: "/admin/objects?_self.schema.id=0d1fa2e1-cdd6-4816-805e-6bbbbccff1c9"
          type: object
          description: "De in dit huwelijk betrokken partners, bestaande uit hun instemmming (Assent) en getuigen."
          nullable: true
          multiple: true
        getuigen:
          _list: "/admin/objects?_self.schema.id=0d1fa2e1-cdd6-4816-805e-6bbbbccff1c9"
          type: object
          maxLength: 4
          nullable: true
          multiple: true
        type:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          description: "Het juridische type van dit huwelijk zo als opgehaald uit de SDG catalogus, zijnde huwelijk, parnterschap of omzetting"
          nullable: true
        ceremonie:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          description: "De cermonie (manier) waarop het huwelijk wordt volgrokken. Bijvoorbeeld gratis, flits, eenvoudig of uitgebreid."
          nullable: true
        locatie:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          description: "Verwijzing(uri) naar de Locatie in het SDG, bij ophalen kan de query parameter &extend[]=locatie worden gebruikt om een volledig object op te halen."
          nullable: true
        ambtenaar:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          description: "Verwijzing(uri) naar de Ambtenaar in het SDG, bij ophalen kan de query parameter &extend[]=ambtenaarworden gebruikt om een volledig object op te halen."
          nullable: true
        producten:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          description: "De bij dit huwelijk gekozen extra producten"
          nullable: true
          multiple: true
        checklist:
          _list: "/admin/objects?_self.schema.id=a114b861-e17c-443f-8950-8dd84f3eff69"
          type: object
          nullable: true
          readOnly: true
        instemmingGemeente:
          _list: "/admin/objects?_self.schema.id=0d1fa2e1-cdd6-4816-805e-6bbbbccff1c9"
          type: object
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          description: "Een zaak bevat de ZRC verwijzing naar een zaak, mits de gemeente deze als verplicht heet ingecalculeerd. De zaak wordt onderwater autotmatisch gecreerd. , bij ophalen kan de query parameter &extend[]=zaak worden gebruikt om een volledig object op te halen."
          example: "https://www.zuiddrecht.nl/api/zrc/vi/ea16b2d6-3e0f-43d7-abf2-069569b2ee54"
          nullable: true
          readOnly: true
      type: object
    Medewerker:
      $id: "https://huwelijksplanner.nl/schemas/hp.medewerker.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Medewerker
      description: "Dit ORC medewerker object vang kiss specifieke wensen af. Let op het is verstandig de medewerker op te halen met ?extend[]=contact&extend[]=calendar zodat de contact en agenda gegevens meteen mee komen."
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        user:
          type: string
          format: email
          description: "URI Verwijzing naar de bij deze medewerk horende gebruiker"
          nullable: true
        contact:
          type: string
          description: "Een verwijzing naar de contact gegeven van de medewerker in de klanten API"
          nullable: true
        department:
          type: string
          nullable: true
        function:
          type: string
          description: "De funtie titel die door deze medewerker word bekleed"
          nullable: true
        replacement:
          type: string
          format: uri
          description: "Verwijzing naar een andere medewerker die deze medewerker vervangt indien niet aanwezig/onbechickbaar"
          nullable: true
        skills:
          type: string
          description: "An array of skills associated with this employee (used as starting values for search indexes, note that this field is actually a string!)"
          nullable: true
        description:
          type: string
          nullable: true
        availabilities:
          _list: "/admin/objects?_self.schema.id=86e6f102-1c7b-426e-8e21-c4734737682a"
          type: object
          nullable: true
      type: object
    SDGProduct:
      $id: "https://huwelijksplanner.nl/schemas/hp.sdgProduct.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: SDGProduct
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          nullable: true
        uuid:
          type: string
          nullable: true
        upnLabel:
          type: string
          nullable: true
        upnUri:
          type: string
          nullable: true
        versie:
          type: integer
          nullable: true
        publicatieDatum:
          type: string
          nullable: true
        productAanwezigheid:
          type: boolean
          nullable: true
        productValtOnder:
          type: string
          nullable: true
        catalogus:
          type: string
          nullable: true
        locaties:
          type: array
          nullable: true
        doelgroep:
          type: string
          nullable: true
        verantwoordelijkeOrganisatie:
          _list: "/admin/objects?_self.schema.id=7ecd0aa7-f623-4381-a94d-92075e5893ca"
          type: object
          nullable: true
        bevoegdeOrganisatie:
          _list: "/admin/objects?_self.schema.id=7ecd0aa7-f623-4381-a94d-92075e5893ca"
          type: object
          nullable: true
        vertalingen:
          _list: "/admin/objects?_self.schema.id=969c7f1e-6bf2-41f7-ac06-65b7f8785e79"
          type: object
          nullable: true
          multiple: true
        gerelateerdeProducten:
          _list: "/admin/objects?_self.schema.id=84034478-0110-4433-9d64-a59cdcf6cbae"
          type: object
          nullable: true
          multiple: true
      type: object
    Accommodation:
      $id: "https://huwelijksplanner.nl/schemas/hp.accommodation.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Accommodation
      description: "A room or other accommodation that can facilitate people."
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: "The name of this accommodation is displayed as a title to end users"
          maxLength: 255
          nullable: true
        description:
          type: string
          description: "The description of this accommodation is displayed to end users as additional information"
          maxLength: 255
          nullable: true
        accommodationCategory:
          type: string
          description: "The category this accomodation falls into"
          maxLength: 255
          nullable: true
        floorSize:
          type: string
          description: "The floor surface area of the accommodation"
          maxLength: 255
          nullable: true
        petsAllowed:
          type: boolean
          description: "Answers the question if pets are allowed or not"
          nullable: true
        wheelchairAccessible:
          type: boolean
          description: "Answers the question if the accomodation is wheelchair accessible"
          nullable: true
        numberOfBathroomsTotal:
          type: integer
          description: "The number of available toilets at the accommodation"
          nullable: true
        floorLevel:
          type: integer
          description: "The floor level the accommodation is situated on"
          nullable: true
        maximumAttendeeCapacity:
          type: integer
          description: "The maximum number of attendees the accommodation can facilitate"
          nullable: true
        product:
          type: string
          description: "The product this accommodation is related to"
          maxLength: 255
          nullable: true
        place:
          type: string
          description: "The location this accommodation belongs to"
          nullable: true
        accommodationProperties:
          type: string
          description: "accommodation properties"
          nullable: true
      type: object
    Message:
      $id: "https://huwelijksplanner.nl/schemas/hp.message.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Message
      description: "A  message to be send to a spefic recipient or list troug a message service."
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        receiver:
          type: string
          description: "Either a contact component person or contact list or an plain email that will recieve this message"
          maxLength: 255
          nullable: true
        sender:
          type: string
          description: "Either a contact component person, or wrc application or an plain email that sends this message"
          maxLength: 255
          nullable: true
        subject:
          type: string
          description: "subject of the mail"
          maxLength: 255
          nullable: true
        content:
          type: string
          description: "The webresource template object (from wrc) that is used as content for this message"
          nullable: true
        type:
          type: string
          description: "The type of this message."
          maxLength: 255
          nullable: true
        resource:
          type: string
          description: "A resource used for this message."
          maxLength: 255
          nullable: true
        data:
          type: array
          nullable: true
        status:
          type: string
          description: "The current status of this message"
          maxLength: 255
          nullable: true
        service:
          _list: "/admin/objects?_self.schema.id=4f500b98-5345-407f-982f-f6178deb07ad"
          type: object
          nullable: true
        attachments:
          _list: "/admin/objects?_self.schema.id=6be45551-2b20-4ff8-8725-b83ea8d2cac5"
          type: object
          nullable: true
          multiple: true
      type: object
    SendList:
      $id: "https://huwelijksplanner.nl/schemas/hp.sendList.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: SendList
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      required:
        - name
        - organisation
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: "The name of this SendList."
          maxLength: 255
          nullable: true
        description:
          type: string
          description: "The description of this SendList."
          maxLength: 255
          nullable: true
        mail:
          type: boolean
          description: "True if this is an mailing list."
          nullable: true
        phone:
          type: boolean
          description: "True if this is an phone list."
          nullable: true
        organisation:
          type: string
          description: "An organization in Web Resource Catalogus (Will mostly be the id-vault application->organization)"
          maxLength: 255
          nullable: true
        resource:
          type: string
          description: "A extra resource (Mostly used if this list is for an organization in a id-vault application)"
          maxLength: 255
          nullable: true
        subscribers:
          _list: "/admin/objects?_self.schema.id=bb4ca7f9-2779-48b9-a5e6-1bc7dcabc03c"
          type: object
          nullable: true
          multiple: true
      type: object
    Service:
      $id: "https://huwelijksplanner.nl/schemas/hp.service.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Service
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      required:
        - organisation
        - authorization
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        type:
          type: string
          description: "The type of this service, iether use a pre configures service or just plain simple old smtp"
          maxLength: 255
          nullable: true
        organisation:
          type: string
          description: "The RSIN of the organization that ownes this service"
          maxLength: 255
          nullable: true
        authorization:
          type: string
          description: "The autorization be it password or api key that is used to connect to the service"
          maxLength: 255
          nullable: true
        configuration:
          type: array
          description: "Any specific setting for this service"
          nullable: true
      type: object
    Subscriber:
      $id: "https://huwelijksplanner.nl/schemas/hp.subscriber.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Subscriber
      description: "SendList is a way for Applications to send messages through email or phone."
      version: "0.1"
      exclude: false
      maxDepth: 5
      nameProperties: {}
      required:
        - sendLists
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        email:
          type: string
          description: "email of the subscriber"
          maxLength: 255
          nullable: true
        resource:
          type: string
          description: "resource of this subscriber, for example: wac/group, uc/user or cc/person"
          maxLength: 255
          nullable: true
        dateAcceptedOrganisation:
          type: string
          format: datetime
          description: "The moment the invite was accepted by the organization"
          nullable: true
        dateAcceptedUser:
          type: string
          format: datetime
          description: "The moment the invite was accepted by the user"
          nullable: true
        sendLists:
          _list: "/admin/objects?_self.schema.id=e40afd62-9be5-4c21-b721-e3129583529f"
          type: object
          nullable: true
          multiple: true
      type: object
    AvailabilityCheck:
      $id: "https://huwelijksplanner.nl/schemas/hp.availabilityCheck.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: AvailabilityCheck
      description: ""
      version: 0.1.0
      exclude: false
      maxDepth: 5
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        start:
          type: string
          format: datetime
          description: "The start date."
          nullable: true
        stop:
          type: string
          format: datetime
          description: "The end date."
          nullable: true
        interval:
          type: string
          description: "The interval."
          nullable: true
        resources_could:
          type: string
          description: "The recources."
          nullable: true
      type: object
    Klant:
      $id: "https://klantenBundle.commonground.nu/klant.klant.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Klant
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object"
          nullable: true
        bronorganisatie:
          type: string
          description: "Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de klant heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef"
          nullable: true
        klantnummer:
          type: string
          description: "De unieke identificatie van de klant binnen de bronorganisatie."
          nullable: true
        bedrijfsnaam:
          type: string
          description: "De bedrijfsnaam van de klant."
          nullable: true
        functie:
          type: string
          description: "De functie van de klant."
          nullable: true
        websiteUrl:
          type: string
          format: uri
          description: "Het label of etiket dat aan de specifieke informatiebron, zoals een webpagina, een bestand of een plaatje op internet is toegewezen waar de KLANT in de regel op het internet vindbaar is."
          nullable: true
        voornaam:
          type: string
          description: "De voornaam, voorletters of roepnaam van de klant."
          nullable: true
        voorvoegselAchternaam:
          type: string
          description: "Het voorvoegsel van de achternaam van de klant."
          nullable: true
        achternaam:
          type: string
          description: "De achternaam van de klant."
          nullable: true
        subject:
          type: string
          format: uri
          description: "URL-referentie naar een subject"
          nullable: true
        subjectType:
          type: string
          description: "Type van de `subject`.\n\nUitleg bij mogelijke waarden:\n\n* `natuurlijk_persoon` - Natuurlijk persoon\n* `niet_natuurlijk_persoon` - Niet-natuurlijk persoon\n* `vestiging` - Vestiging"
          nullable: true
        telefoonnummers:
          _list: "/admin/objects?_self.schema.id=2111f163-40af-425c-b18c-3938d90beeee"
          type: object
          nullable: true
          multiple: true
        emails:
          _list: "/admin/objects?_self.schema.id=ecf38131-5ec1-456a-bf28-ff4cfb35b715"
          type: object
          nullable: true
          multiple: true
        adressen:
          _list: "/admin/objects?_self.schema.id=5264780f-a85a-4d7c-ad05-91b4eeaa55ec"
          type: object
          nullable: true
          multiple: true
        subjectIdentificatie:
          _list: "/admin/objects?_self.schema.id=4fcb481c-be59-42a3-84fe-101b684887af"
          type: object
          nullable: true
      type: object
    KlantAdres:
      $id: "https://klantenBundle.commonground.nu/klant.klantAdres.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: KlantAdres
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        naam:
          type: string
          description: "De naam van dit adres, b.v. thuis"
          nullable: true
        straatnaam:
          type: string
          nullable: true
        huisnummer:
          type: integer
          nullable: true
        huisletter:
          type: string
          nullable: true
        huisnummertoevoeging:
          type: string
          nullable: true
        postcode:
          type: string
          nullable: true
        woonplaatsnaam:
          type: string
          nullable: true
        landcode:
          type: string
          description: "De code, behorende bij de landnaam, zoals opgenomen in de Land/Gebied-tabel van de BRP."
          nullable: true
      type: object
    Contactmoment:
      $id: "https://klantenBundle.commonground.nu/klant.contactmoment.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Contactmoment
      description: ""
      version: "0.2"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object"
          nullable: true
        bronorganisatie:
          type: string
          description: "Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de klantinteractie heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan"
          maxLength: 9
          nullable: true
        registratiedatum:
          type: string
          format: datetime
          description: "De datum en het tijdstip waarop het CONTACTMOMENT is geregistreerd."
          nullable: true
        startdatum:
          type: string
          format: datetime
          description: "De datum en het tijdstip waarop het CONTACTMOMENT is gestart."
          nullable: true
        einddatum:
          type: string
          format: datetime
          description: "De datum en het tijdstip waarop het CONTACTMOMENT is geëindigd."
          nullable: true
        resultaat:
          type: string
          description: "Url verwijzing naar referentielijsten api."
          nullable: true
        gespreksId:
          type: string
          format: uud
          defaultValue: "{{ generated_uuid() }}"
          nullable: true
        kanaal:
          type: string
          description: "Het communicatiekanaal waarlangs het CONTACTMOMENT gevoerd wordt"
          maxLength: 50
          nullable: true
        voorkeurskanaal:
          type: string
          description: "Het communicatiekanaal dat voor opvolging van de klantinteractie de voorkeur heeft van de KLANT."
          maxLength: 50
          nullable: true
        voorkeurstaal:
          type: string
          description: "Een ISO 639-2/B taalcode waarin de inhoud van het INFORMATIEOBJECT is vastgelegd. Voorbeeld: nld. Zie: https://www.iso.org/standard/4767.html"
          maxLength: 3
          nullable: true
        tekst:
          type: string
          description: "Een toelichting die inhoudelijk de klantinteractie van de klant beschrijft."
          nullable: true
        onderwerpLinks:
          type: array
          description: "Eén of meerdere links naar een product, webpagina of andere entiteit zodat contactmomenten gegroepeerd kunnen worden op onderwerp."
          nullable: true
        initiatiefnemer:
          type: string
          description: "De partij die het contact heeft geïnitieerd."
          enum:
            - gemeente
            - klant
          nullable: true
        medewerker:
          type: string
          format: uri
          description: "URL-referentie naar een medewerker"
          maxLength: 1000
          nullable: true
        afwijkendOnderwerp:
          type: string
          maxLength: 2555
          nullable: true
        primaireVraag:
          type: string
          nullable: true
        primaireVraagWeergave:
          type: string
          nullable: true
        vorigContactmoment:
          _list: "/admin/objects?_self.schema.id=ddd4af07-93c0-41be-af69-d28f8c9a82d7"
          type: object
          nullable: true
        volgendContactmoment:
          _list: "/admin/objects?_self.schema.id=ddd4af07-93c0-41be-af69-d28f8c9a82d7"
          type: object
          nullable: true
        medewerkerIdentificatie:
          _list: "/admin/objects?_self.schema.id=1ab14043-e222-47b7-bc8d-803e317077cf"
          type: object
          nullable: true
        objectcontactmomenten:
          _list: "/admin/objects?_self.schema.id=538a22e5-1dd3-4bdd-b410-f45ce02e5da3"
          type: object
          nullable: true
          multiple: true
        klantcontactmomenten:
          _list: "/admin/objects?_self.schema.id=a3d0257b-a8f3-41ef-942a-0b2762c74775"
          type: object
          nullable: true
          multiple: true
        todo:
          _list: "/admin/objects?_self.schema.id=b558935a-c61d-4bbd-9c00-fe52ddcc780a"
          type: object
          nullable: true
      type: object
    KlantContactmoment:
      $id: "https://klantenBundle.commonground.nu/klant.klantContactmoment.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: KlantContactmoment
      description: ""
      version: "0.2"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object"
          maxLength: 1000
          nullable: true
        rol:
          type: string
          description: "De rol van de KLANT in het CONTACTMOMENT. Indien de KLANT zowel gesprekspartner als belanghebbende is, dan worden er twee KLANTCONTACTMOMENTen aangemaakt."
          enum:
            - belanghebbende
            - gesprekspartner
          nullable: true
        gesprek:
          type: string
          nullable: true
        contactmoment:
          _list: "/admin/objects?_self.schema.id=ddd4af07-93c0-41be-af69-d28f8c9a82d7"
          type: object
          nullable: true
        klant:
          _list: "/admin/objects?_self.schema.id=2809c16d-2a45-4530-b03f-c67484978b7e"
          type: object
          nullable: true
      type: object
    ObjectContactmoment:
      $id: "https://klantenBundle.commonground.nu/klant.objectContactmoment.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ObjectContactmoment
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object"
          maxLength: 1000
          nullable: true
        object:
          type: string
          format: uri
          description: "URL-referentie naar het gerelateerde OBJECT (in een andere API)."
          maxLength: 1000
          nullable: true
        objectType:
          type: string
          description: "Het type van het gerelateerde OBJECT.\n\nUitleg bij mogelijke waarden:\n\nzaak - Zaak"
          enum:
            - zaak
          nullable: true
        contactmoment:
          _list: "/admin/objects?_self.schema.id=ddd4af07-93c0-41be-af69-d28f8c9a82d7"
          type: object
          nullable: true
      type: object
    KlantEmail:
      $id: "https://klantenBundle.commonground.nu/klant.klantEmail.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: KlantEmail
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        naam:
          type: string
          description: "De naam van dit email"
          nullable: true
        email:
          type: string
          format: email
          description: "Het email adres"
          nullable: true
      type: object
    KlantTelefoon:
      $id: "https://klantenBundle.commonground.nu/klant.klantTelefoon.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: KlantTelefoon
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        naam:
          type: string
          description: "De naam van dit telefoonnummer"
          nullable: true
        telefoonnummer:
          type: string
          description: "Het telefoonnummer"
          nullable: true
      type: object
    SubjectIdentificatie:
      $id: "https://klantenBundle.commonground.nu/klant.subjectIdentificatie.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: SubjectIdentificatie
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        inpBsn:
          type: string
          description: "Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer."
          maxLength: 9
          nullable: true
        anpIdentificatie:
          type: string
          description: "Het door de gemeente uitgegeven unieke nummer voor een ANDER NATUURLIJK PERSOON"
          maxLength: 17
          nullable: true
        inpANummer:
          type: string
          description: "Het administratienummer van de persoon, bedoeld in de Wet BRP"
          maxLength: 10
          nullable: true
        geslachtsnaam:
          type: string
          description: "De stam van de geslachtsnaam."
          maxLength: 200
          nullable: true
        voorvoegselGeslachtsnaam:
          type: string
          maxLength: 80
          nullable: true
        voorletters:
          type: string
          description: "De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen."
          maxLength: 20
          nullable: true
        voornamen:
          type: string
          description: "Voornamen bij de naam die de persoon wenst te voeren."
          maxLength: 200
          nullable: true
        geslachtsaanduiding:
          type: string
          description: "Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.\n\nUitleg bij mogelijke waarden:\n\n* `m` - Man\n* `v` - Vrouw\n* `o` - Onbekend"
          enum:
            - m
            - v
            - o
          nullable: true
        geboortedatum:
          type: string
          maxLength: 9
          nullable: true
        vestigingsNummer:
          type: string
          description: "Een korte unieke aanduiding van de Vestiging."
          maxLength: 24
          nullable: true
        handelsnaam:
          type: array
          description: "De naam van de vestiging waaronder gehandeld wordt."
          nullable: true
        verblijfsadres:
          _list: "/admin/objects?_self.schema.id=d09e153e-af11-4faa-a961-b77038f1412e"
          type: object
          nullable: true
        subVerblijfBuitenland:
          _list: "/admin/objects?_self.schema.id=047f854e-00d6-4b95-929c-d4a947e72a78"
          type: object
          nullable: true
      type: object
    VerblijfAdres:
      $id: "https://klantenBundle.commonground.nu/klant.verblijfAdres.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: VerblijfAdres
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        aoaHuisnummer:
          type: string
          nullable: true
        aoaHuisletter:
          type: string
          maxLength: 1
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        aoaIdentificatie:
          type: string
          description: "De unieke identificatie van het OBJECT"
          maxLength: 100
          nullable: true
        wplWoonplaatsNaam:
          type: string
          maxLength: 80
          nullable: true
        gorOpenbareRuimteNaam:
          type: integer
          description: "Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming"
          maxLength: 80
          nullable: true
        aoaPostcode:
          type: string
          maxLength: 7
          nullable: true
        aoaHuisnummertoevoeging:
          type: string
          maxLength: 4
          nullable: true
        inpLocatiebeschrijving:
          type: string
          maxLength: 1000
          nullable: true
      type: object
    SubVerblijfBuitenland:
      $id: "https://klantenBundle.commonground.nu/klant.subVerblijfBuitenland.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: SubVerblijfBuitenland
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        lndLandcode:
          type: string
          description: "De code, behorende bij de landnaam, zoals opgenomen in de Land/Gebied-tabel van de BRP."
          maxLength: 4
          nullable: true
        lndLandnaam:
          type: string
          description: "De naam van het land, zoals opgenomen in de Land/Gebied-tabel van de BRP."
          maxLength: 40
          nullable: true
        subAdresBuitenland1:
          type: integer
          maxLength: 35
          nullable: true
        subAdresBuitenland2:
          type: string
          maxLength: 35
          nullable: true
        subAdresBuitenland3:
          type: string
          maxLength: 35
          nullable: true
      type: object
    KlantContact:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.klantContact.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: KlantContact
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - zaak
        - datumtijd
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        zaak:
          type: string
          format: uri
          description: "URL-referentie naar de ZAAK."
          nullable: true
        identificatie:
          type: string
          description: "De unieke aanduiding van een KLANTCONTACT"
          maxLength: 14
          nullable: true
        datumtijd:
          type: string
          format: date-time
          description: "De datum en het tijdstip waarop het KLANTCONTACT begint"
          nullable: true
        kanaal:
          type: string
          description: "Het communicatiekanaal waarlangs het KLANTCONTACT gevoerd wordt"
          maxLength: 20
          nullable: true
        onderwerp:
          type: string
          description: "Het onderwerp waarover contact is geweest met de klant."
          maxLength: 200
          nullable: true
        toelichting:
          type: string
          description: "Een toelichting die inhoudelijk het contact met de klant beschrijft."
          maxLength: 1000
          nullable: true
      type: object
    Resultaat:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.resultaat.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Resultaat
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - zaak
        - resultaattype
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        toelichting:
          type: string
          description: "Een toelichting op wat het resultaat van de zaak inhoudt."
          maxLength: 1000
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          nullable: true
        resultaattype:
          _list: "/admin/objects?_self.schema.id=472e0865-25db-46e3-9887-d9da812ff340"
          type: object
          format: url
          description: "URL-referentie naar het RESULTAATTYPE (in de Catalogi API)."
          nullable: true
      type: object
    Rol:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.rol.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Rol
      description: ""
      version: 0.2.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - roltype
        - roltoelichting
        - betrokkeneType
      properties:
        betrokkeneIdentificatie:
          _list: "/admin/objects?_self.schema.id=248a6863-8099-4327-8d8f-899ae3e074c4"
          type: object
          format: url
          nullable: true
        roltype:
          _list: "/admin/objects?_self.schema.id=89265182-6c9d-4826-a74c-f3fca87d4d86"
          type: object
          format: url
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          nullable: true
        indicatieMachtiging:
          type: string
          description: "Uitleg bij mogelijke waarden:\n\ngemachtigde - De betrokkene in de rol bij de zaak is door een andere betrokkene bij dezelfde zaak gemachtigd om namens hem of haar te handelen\nmachtiginggever - De betrokkene in de rol bij de zaak heeft een andere betrokkene bij dezelfde zaak gemachtigd om namens hem of haar te handelen"
          enum:
            - gemachtigde
            - machtiginggever
          nullable: true
        registratiedatum:
          type: string
          format: datetime
          description: "De datum waarop dit object is geregistreerd."
          nullable: true
          readOnly: true
        roltoelichting:
          type: string
          maxLength: 1000
          nullable: true
        omschrijvingGeneriek:
          type: string
          description: "Algemeen gehanteerde benaming van de aard van de ROL, afgeleid uit het ROLTYPE.\n\nUitleg bij mogelijke waarden:\n\nadviseur - (Adviseur) Kennis in dienst stellen van de behandeling van (een deel van) een zaak.\nbehandelaar - (Behandelaar) De vakinhoudelijke behandeling doen van (een deel van) een zaak.\nbelanghebbende - (Belanghebbende) Vanuit eigen en objectief belang rechtstreeks betrokken zijn bij de behandeling en/of de uitkomst van een zaak.\nbeslisser - (Beslisser) Nemen van besluiten die voor de uitkomst van een zaak noodzakelijk zijn.\ninitiator - (Initiator) Aanleiding geven tot de start van een zaak ..\nklantcontacter - (Klantcontacter) Het eerste aanspreekpunt zijn voor vragen van burgers en bedrijven ..\nzaakcoordinator - (Zaakcoördinator) Er voor zorg dragen dat de behandeling van de zaak in samenhang uitgevoerd wordt conform de daarover gemaakte afspraken.\nmede_initiator - Mede-initiator"
          nullable: true
          readOnly: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van de ROL, afgeleid uit het ROLTYPE."
          nullable: true
          readOnly: true
        betrokkeneType:
          type: string
          description: "Type van de betrokkene.\n\nUitleg bij mogelijke waarden:\n\nnatuurlijk_persoon - Natuurlijk persoon\nniet_natuurlijk_persoon - Niet-natuurlijk persoon\nvestiging - Vestiging\norganisatorische_eenheid - Organisatorische eenheid\nmedewerker - Medewerker"
          enum:
            - natuurlijk_persoon
            - niet_natuurlijk_persoon
            - vestiging
            - organisatorische_eenheid
            - medewerker
          nullable: true
        betrokkene:
          type: string
          description: "URL-referentie naar een betrokkene gerelateerd aan de ZAAK."
          maxLength: 1000
          nullable: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          nullable: true
          readOnly: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    Status:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.status.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Status
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - statustype
        - datumStatusGezet
      properties:
        statustype:
          _list: "/admin/objects?_self.schema.id=472e0865-25db-46e3-9887-d9da812ff340"
          type: object
          format: url
          description: "URL-referentie naar het STATUSTYPE (in de Catalogi API)."
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          nullable: true
        statustoelichting:
          type: string
          description: "Een, voor de initiator van de zaak relevante, toelichting op de status van een zaak."
          maxLength: 1000
          nullable: true
        datumStatusGezet:
          type: string
          format: datetime
          description: "De datum waarop de ZAAK de status heeft verkregen."
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          nullable: true
          readOnly: true
      type: object
    ZaakInformatieObject:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.zaakInformatieObject.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakInformatieObject
      description: ""
      version: 0.2.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - zaak
        - aardRelatieWeergave
      properties:
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          nullable: true
        informatieobject:
          _list: "/admin/objects?_self.schema.id=60ecdfc3-ab0a-4294-9c91-36c90c4423a3"
          type: object
          format: url
          description: "URL-referentie naar het INFORMATIEOBJECT (in de Documenten API), waar ook de relatieinformatie opgevraagd kan worden."
          nullable: true
        registratiedatum:
          type: string
          format: datetime
          description: "De datum waarop de behandelende organisatie het INFORMATIEOBJECT heeft geregistreerd bij het OBJECT. Geldige waardes zijn datumtijden gelegen op of voor de huidige datum en tijd."
          nullable: true
          readOnly: true
        titel:
          type: string
          description: "De naam waaronder het INFORMATIEOBJECT binnen het OBJECT bekend is."
          maxLength: 200
          nullable: true
        aardRelatieWeergave:
          type: string
          enum:
            - "Hoort bij, omgekeerd: kent"
            - "Legt vast, omgekeerd: kan vastgelegd zijn als"
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          nullable: true
          readOnly: true
        id:
          type: string
          format: uuid
          nullable: true
        beschrijving:
          type: string
          description: "Een op het object gerichte beschrijving van de inhoud vanhet INFORMATIEOBJECT."
          nullable: true
      type: object
    Zaak:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.zaak.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Zaak
      description: ""
      version: 0.2.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - registratiedatum
        - verantwoordelijkeOrganisatie
        - startdatum
        - zaaktype
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        identificatie:
          type: string
          description: "De unieke identificatie van de ZAAK binnen de organisatie die verantwoordelijk is voor de behandeling van de ZAAK."
          maxLength: 40
          nullable: true
        omschrijving:
          type: string
          description: "Een korte omschrijving van de zaak."
          maxLength: 80
          nullable: true
        toelichting:
          type: string
          description: "Een toelichting op de zaak."
          maxLength: 1000
          nullable: true
        registratiedatum:
          type: string
          format: date
          description: "De datum waarop de zaakbehandelende organisatie de ZAAK heeft geregistreerd. Indien deze niet opgegeven wordt, wordt de datum van vandaag gebruikt."
          nullable: true
        verantwoordelijkeOrganisatie:
          type: string
          description: "Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die eindverantwoordelijk is voor de behandeling van de zaak. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef"
          maxLength: 9
          nullable: true
        startdatum:
          type: string
          format: date
          description: "De datum waarop met de uitvoering van de zaak is gestart"
          nullable: true
        einddatum:
          type: string
          format: date
          description: "De datum waarop de uitvoering van de zaak afgerond is."
          nullable: true
          readOnly: true
        einddatumGepland:
          type: string
          format: date
          description: "De datum waarop volgens de planning verwacht wordt dat de zaak afgerond wordt."
          nullable: true
        uiterlijkeEinddatumAfdoening:
          type: string
          format: date
          description: "De laatste datum waarop volgens wet- en regelgeving de zaak afgerond dient te zijn."
          nullable: true
        publicatiedatum:
          type: string
          format: date
          description: "Datum waarop (het starten van) de zaak gepubliceerd is of wordt."
          nullable: true
        communicatiekanaal:
          type: string
          format: uri
          description: "Het medium waarlangs de aanleiding om een zaak te starten is ontvangen. URL naar een communicatiekanaal in de VNG-Referentielijst van communicatiekanalen."
          maxLength: 1000
          nullable: true
        productenOfDiensten:
          type: array
          description: "De producten en/of diensten die door de zaak worden voortgebracht. Dit zijn URLs naar de resources zoals die door de producten- en dienstencatalogus-API wordt ontsloten. De producten/diensten moeten bij het zaaktype vermeld zijn."
          nullable: true
        vertrouwelijkheidaanduiding:
          type: string
          description: "Aanduiding van de mate waarin het zaakdossier van de ZAAK voor de openbaarheid bestemd is. Optioneel - indien geen waarde gekozen wordt, dan wordt de waarde van het ZAAKTYPE overgenomen. Dit betekent dat de API _altijd_ een waarde teruggeeft."
          enum:
            - openbaar
            - beperkt_openbaar
            - intern
            - zaakvertrouwelijk
            - vertrouwelijk
            - confidentieel
            - geheim
            - zeer_geheim
          nullable: true
        betalingsindicatie:
          type: string
          description: "Indicatie of de, met behandeling van de zaak gemoeide, kosten betaald zijn door de desbetreffende betrokkene.\n\nUitleg bij mogelijke waarden:\n\n* `nvt` - Er is geen sprake van te betalen, met de zaak gemoeide, kosten.\n* `nog_niet` - De met de zaak gemoeide kosten zijn (nog) niet betaald.\n* `gedeeltelijk` - De met de zaak gemoeide kosten zijn gedeeltelijk betaald.\n* `geheel` - De met de zaak gemoeide kosten zijn geheel betaald."
          enum:
            - nvt
            - nog_niet
            - gedeeltelijk
            - geheel
          nullable: true
        betalingsindicatieWeergave:
          type: string
          description: "Uitleg bij `betalingsindicatie`."
          nullable: true
          readOnly: true
        laatsteBetaaldatum:
          type: string
          format: date-time
          description: "De datum waarop de meest recente betaling is verwerkt van kosten die gemoeid zijn met behandeling van de zaak."
          nullable: true
        selectielijstklasse:
          type: string
          format: uri
          description: "URL-referentie naar de categorie in de gehanteerde 'Selectielijst Archiefbescheiden' die, gezien het zaaktype en het resultaattype van de zaak, bepalend is voor het archiefregime van de zaak."
          maxLength: 1000
          nullable: true
        hoofdzaak:
          type: string
          format: uri
          description: "URL-referentie naar de ZAAK, waarom verzocht is door de initiator daarvan, die behandeld wordt in twee of meer separate ZAAKen waarvan de onderhavige ZAAK er één is."
          nullable: true
        deelzaken:
          type: array
          description: "URL-referenties naar deel ZAAKen."
          nullable: true
          readOnly: true
        zaakobjecten:
          type: array
          nullable: true
          readOnly: true
        archiefnominatie:
          type: string
          description: "Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.\n\nUitleg bij mogelijke waarden:\n\n* `blijvend_bewaren` - Het zaakdossier moet bewaard blijven en op de Archiefactiedatum overgedragen worden naar een archiefbewaarplaats.\n* `vernietigen` - Het zaakdossier moet op of na de Archiefactiedatum vernietigd worden."
          enum:
            - blijvend_bewaren
            - vernietigen
          nullable: true
        archiefstatus:
          type: string
          description: "Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.\n\nUitleg bij mogelijke waarden:\n\n* `nog_te_archiveren` - De zaak cq. het zaakdossier is nog niet als geheel gearchiveerd.\n* `gearchiveerd` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt.\n* `gearchiveerd_procestermijn_onbekend` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt maar de vernietigingsdatum kan nog niet bepaald worden.\n* `overgedragen` - De zaak cq. het zaakdossier is overgebracht naar een archiefbewaarplaats."
          enum:
            - nog_te_archiveren
            - gearchiveerd
            - gearchiveerd_procestermijn_onbekend
            - overgedragen
          nullable: true
        archiefactiedatum:
          type: string
          format: date
          description: "De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg."
          nullable: true
        resultaat:
          type: string
          format: uri
          description: "URL-referentie naar het RESULTAAT. Indien geen resultaat bekend is, dan is de waarde 'null'"
          nullable: true
          readOnly: true
        opdrachtgevendeOrganisatie:
          type: string
          description: "De krachtens publiekrecht ingestelde rechtspersoon dan wel ander niet-natuurlijk persoon waarbinnen het (bestuurs)orgaan zetelt dat opdracht heeft gegeven om taken uit te voeren waaraan de zaak invulling geeft."
          maxLength: 9
          nullable: true
        referentienummer:
          type: string
          nullable: true
        zaaktype:
          _list: "/admin/objects?_self.schema.id=576e405d-1174-4316-9d90-57a58b48cb61"
          type: object
          format: url
          description: "ZaakType from ZaakTypeCatalogus"
          nullable: true
        zaakgeometrie:
          _list: "/admin/objects?_self.schema.id=6300e6dc-be5d-46b1-a00d-d172546c4754"
          type: object
          nullable: true
        verlenging:
          _list: "/admin/objects?_self.schema.id=00e0fefc-d9b5-44ca-9e28-373608b5d82f"
          type: object
          nullable: true
        opschorting:
          _list: "/admin/objects?_self.schema.id=7dec0994-efd8-4508-b7f5-d24e6751320b"
          type: object
          nullable: true
        relevanteAndereZaken:
          _list: "/admin/objects?_self.schema.id=c95ed50a-7a6d-4488-af10-bd7719082bdc"
          type: object
          description: "Een lijst van relevante andere zaken."
          nullable: true
          multiple: true
        eigenschappen:
          _list: "/admin/objects?_self.schema.id=0d09d1ed-34da-40f0-9bc5-7123cba8b2f2"
          type: object
          nullable: true
          multiple: true
          readOnly: true
        rollen:
          _list: "/admin/objects?_self.schema.id=f26c13d0-202f-403e-920f-cb9c4154de6c"
          type: object
          nullable: true
          multiple: true
          readOnly: true
        status:
          _list: "/admin/objects?_self.schema.id=48993a0b-f9e1-45dd-aabc-d0d71dcb089f"
          type: object
          nullable: true
        zaakinformatieobjecten:
          _list: "/admin/objects?_self.schema.id=8564a063-472a-4355-88db-7925321ff632"
          type: object
          nullable: true
          multiple: true
          readOnly: true
        kenmerken:
          _list: "/admin/objects?_self.schema.id=d11777a6-28b2-46c9-a7ba-00ef7da72a00"
          type: object
          description: "Lijst van kenmerken. Merk op dat refereren naar gerelateerde objecten beter kan via `ZaakObject`."
          nullable: true
          multiple: true
      type: object
    ZaakObject:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.zaakObject.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakObject
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - objectType
        - zaak
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        object:
          type: string
          format: uri
          description: "URL-referentie naar de resource die het OBJECT beschrijft."
          maxLength: 1000
          nullable: true
        objectType:
          type: string
          description: "Beschrijft het type OBJECT gerelateerd aan de ZAAK. Als er geen passend type is, dan moet het type worden opgegeven onder `objectTypeOverige`.\n\nUitleg bij mogelijke waarden:\n\n* `adres` - Adres\n* `besluit` - Besluit\n* `buurt` - Buurt\n* `enkelvoudig_document` - Enkelvoudig document\n* `gemeente` - Gemeente\n* `gemeentelijke_openbare_ruimte` - Gemeentelijke openbare ruimte\n* `huishouden` - Huishouden\n* `inrichtingselement` - Inrichtingselement\n* `kadastrale_onroerende_zaak` - Kadastrale onroerende zaak\n* `kunstwerkdeel` - Kunstwerkdeel\n* `maatschappelijke_activiteit` - Maatschappelijke activiteit\n* `medewerker` - Medewerker\n* `natuurlijk_persoon` - Natuurlijk persoon\n* `niet_natuurlijk_persoon` - Niet-natuurlijk persoon\n* `openbare_ruimte` - Openbare ruimte\n* `organisatorische_eenheid` - Organisatorische eenheid\n* `pand` - Pand\n* `spoorbaandeel` - Spoorbaandeel\n* `status` - Status\n* `terreindeel` - Terreindeel\n* `terrein_gebouwd_object` - Terrein gebouwd object\n* `vestiging` - Vestiging\n* `waterdeel` - Waterdeel\n* `wegdeel` - Wegdeel\n* `wijk` - Wijk\n* `woonplaats` - Woonplaats\n* `woz_deelobject` - Woz deel object\n* `woz_object` - Woz object\n* `woz_waarde` - Woz waarde\n* `zakelijk_recht` - Zakelijk recht\n* `overige` - Overige"
          enum:
            - adres
            - besluit
            - buurt
            - enkelvoudig_document
            - gemeente
            - gemeentelijke_openbare_ruimte
            - huishouden
            - inrichtingselement
            - kadastrale_onroerende_zaak
            - kunstwerkdeel
            - maatschappelijke_activiteit
            - medewerker
            - natuurlijk_persoon
            - niet_natuurlijk_persoon
            - openbare_ruimte
            - organisatorische_eenheid
            - pand
            - spoorbaandeel
            - status
            - terreindeel
            - terrein_gebouwd_object
            - vestiging
            - waterdeel
            - wegdeel
            - wijk
            - woonplaats
            - woz_deelobject
            - woz_object
            - woz_waarde
            - zakelijk_recht
            - overige
          nullable: true
        objectTypeOverige:
          type: string
          description: 'Beschrijft het type OBJECT als `objectType` de waarde "overige" heeft.'
          maxLength: 100
          nullable: true
        relatieomschrijving:
          type: string
          description: "Omschrijving van de betrekking tussen de ZAAK en het OBJECT."
          maxLength: 80
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          description: "URL-referentie naar de ZAAK."
          nullable: true
      type: object
    ZaakEigenschap:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.zaakEigenschap.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakEigenschap
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - eigenschap
        - zaak
        - waarde
      properties:
        eigenschap:
          _list: "/admin/objects?_self.schema.id=fa97bfba-4c00-4536-a2d6-980f646dedc4"
          type: object
          format: url
          description: "URL-referentie naar de EIGENSCHAP (in de Catalogi API)."
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          nullable: true
        waarde:
          type: string
          nullable: true
        naam:
          type: string
          description: "De naam van de EIGENSCHAP (overgenomen uit de Catalogi API)."
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          nullable: true
          readOnly: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    ZaakBesluit:
      $id: "https://vng.opencatalogi.nl/schemas/zrc.zaakBesluit.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakBesluit
      description: ""
      version: 0.0.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - besluit
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: "Unieke resource identifier (UUID4)"
          nullable: true
          readOnly: true
        besluit:
          type: string
          format: uri
          description: "URL-referentie naar het BESLUITTYPE (in de Catalogi API)."
          maxLength: 200
          nullable: true
        zaak:
          _list: "/admin/objects?_self.schema.id=09526905-9f34-4b95-bfbf-a16761f9ddbb"
          type: object
          format: url
          description: "URL-referentie naar de ZAAK (in de Zaken API) waarvan dit besluit uitkomst is."
          nullable: true
      type: object
    BesluitType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.besluitType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: BesluitType
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - informatieobjecttypen
        - catalogus
        - beginGeldigheid
        - publicatieIndicatie
        - zaaktypes
      properties:
        informatieobjecttypen:
          _list: "/admin/objects?_self.schema.id=369688bb-ac27-46f0-bd7c-ff1b6290224c"
          type: object
          format: url
          description: "URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten waarin besluiten van dit BESLUITTYPE worden vastgelegd."
          nullable: true
          multiple: true
        catalogus:
          _list: "/admin/objects?_self.schema.id=3e4ea720-32f6-4850-852f-b6695f21bf08"
          type: object
          format: url
          nullable: true
        concept:
          type: boolean
          description: "Geeft aan of het object een concept betreft. Concepten zijn niet-definitieve versies en zouden niet gebruikt moeten worden buiten deze API."
          nullable: true
          readOnly: true
        eindeGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is opgeheven."
          nullable: true
        beginGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is ontstaan."
          nullable: true
        toelichting:
          type: string
          description: "Een eventuele toelichting op dit BESLUITTYPE."
          nullable: true
        publicatietermijn:
          type: string
          format: duration
          description: "Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, dat BESLUITen van dit BESLUITTYPE gepubliceerd moeten blijven."
          nullable: true
        publicatietekst:
          type: string
          description: "De generieke tekst van de publicatie van BESLUITen van dit BESLUITTYPE"
          nullable: true
        publicatieIndicatie:
          type: boolean
          description: "Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten worden."
          nullable: true
        reactietermijn:
          type: string
          format: duration
          description: "Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, waarbinnen verweer tegen een besluit van het besluittype mogelijk is."
          nullable: true
        besluitcategorie:
          type: string
          description: "Typering van de aard van BESLUITen van het BESLUITTYPE."
          maxLength: 40
          nullable: true
        omschrijvingGeneriek:
          type: string
          description: "Algemeen gehanteerde omschrijving van de aard van BESLUITen van het BESLUITTYPE"
          maxLength: 80
          nullable: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van BESLUITen van het BESLUITTYPE."
          maxLength: 80
          nullable: true
        zaaktypes:
          type: array
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    Catalogus:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.catalogus.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Catalogus
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - contactpersoonBeheerNaam
        - rsin
        - domein
      properties:
        informatieobjecttypen:
          _list: "/admin/objects?_self.schema.id=369688bb-ac27-46f0-bd7c-ff1b6290224c"
          type: object
          format: url
          description: "URL-referenties naar INFORMATIEOBJECTTYPEn die in deze CATALOGUS worden ontsloten."
          nullable: true
          multiple: true
          readOnly: true
        besluittypen:
          _list: "/admin/objects?_self.schema.id=8038a751-3d42-410c-8f40-3e0020148f56"
          type: object
          format: url
          description: "URL-referenties naar BESLUITTYPEn die in deze CATALOGUS worden ontsloten."
          nullable: true
          multiple: true
          readOnly: true
        zaaktypen:
          _list: "/admin/objects?_self.schema.id=576e405d-1174-4316-9d90-57a58b48cb61"
          type: object
          format: url
          description: "URL-referenties naar ZAAKTYPEn die in deze CATALOGUS worden ontsloten."
          nullable: true
          multiple: true
          readOnly: true
        contactpersoonBeheerEmailadres:
          type: string
          format: email
          description: "Het emailadres van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS."
          maxLength: 254
          nullable: true
        contactpersoonBeheerTelefoonnummer:
          type: string
          description: "Het telefoonnummer van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS."
          maxLength: 20
          nullable: true
        contactpersoonBeheerNaam:
          type: string
          description: "De naam van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS."
          maxLength: 40
          nullable: true
        rsin:
          type: string
          description: "Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON die de eigenaar is van een CATALOGUS."
          maxLength: 9
          nullable: true
        domein:
          type: string
          description: "Een afkorting waarmee wordt aangegeven voor welk domein in een CATALOGUS ZAAKTYPEn zijn uitgewerkt."
          maxLength: 5
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    Eigenschap:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.eigenschap.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Eigenschap
      description: ""
      version: 0.1.2
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - definitie
        - naam
      properties:
        specificatie:
          _list: "/admin/objects?_self.schema.id=afa2b245-0e48-43b4-8668-2b5a618e2045"
          type: object
          format: url
          nullable: true
        zaaktype:
          type: string
          format: uri
          nullable: true
        toelichting:
          type: string
          description: "Een toelichting op deze EIGENSCHAP en het belang hiervan voor zaken van dit ZAAKTYPE."
          maxLength: 1000
          nullable: true
        definitie:
          type: string
          description: "De beschrijving van de betekenis van deze EIGENSCHAP"
          maxLength: 255
          nullable: true
        naam:
          type: string
          description: "De naam van de EIGENSCHAP"
          maxLength: 20
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    InformatieObjectType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.informatieObjectType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: InformatieObjectType
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - beginGeldigheid
        - vertrouwelijkheidaanduiding
        - omschrijving
        - catalogus
      properties:
        concept:
          type: boolean
          description: "Geeft aan of het object een concept betreft. Concepten zijn niet-definitieve versies en zouden niet gebruikt moeten worden buiten deze API."
          nullable: true
          readOnly: true
        eindeGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is opgeheven."
          nullable: true
        beginGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is ontstaan."
          nullable: true
        vertrouwelijkheidaanduiding:
          type: string
          description: "Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.\n\nUitleg bij mogelijke waarden:\n\nopenbaar - Openbaar\nbeperkt_openbaar - Beperkt openbaar\nintern - Intern\nzaakvertrouwelijk - Zaakvertrouwelijk\nvertrouwelijk - Vertrouwelijk\nconfidentieel - Confidentieel\ngeheim - Geheim\nzeer_geheim - Zeer geheim"
          enum:
            - openbaar
            - beperkt_openbaar
            - intern
            - zaakvertrouwelijk
            - vertrouwelijk
            - confidentieel
            - geheim
            - zeer_geheim
          nullable: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE."
          maxLength: 80
          nullable: true
        catalogus:
          type: string
          format: uri
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    ResultaatType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.resultaatType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ResultaatType
      description: ""
      version: 0.1.2
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - selectielijstklasse
        - omschrijving
      properties:
        brondatumArchiefprocedure:
          _list: "/admin/objects?_self.schema.id=75539c10-e3c6-4096-ba46-62a54b290824"
          type: object
          format: url
          description: "Specificatie voor het bepalen van de brondatum voor de start van de Archiefactietermijn (=brondatum) van het zaakdossier."
          nullable: true
        archiefactietermijn:
          type: string
          format: duration
          description: "De termijn, na het vervallen van het bedrjfsvoeringsbelang, waarna het zaakdossier (de ZAAK met alle bijbehorende INFORMATIEOBJECTen) van een ZAAK met een resultaat van dit RESULTAATTYPE vernietigd of overgebracht (naar een archiefbewaarplaats) moet worden. Voor te vernietigen dossiers betreft het de in die Selectielijst genoemde bewaartermjn. Voor blijvend te bewaren zaakdossiers betreft het de termijn vanaf afronding van de zaak tot overbrenging (de procestermijn is dan nihil)."
          nullable: true
        archiefnominatie:
          type: string
          description: "Aanduiding die aangeeft of ZAAKen met een resultaat van dit RESULTAATTYPE blijvend moeten worden bewaard of (op termijn) moeten worden vernietigd. Indien niet expliciet opgegeven wordt dit gevuld vanuit de selectielijst.\nUitleg bij mogelijke waarden:\n* `blijvend_bewaren` - Het zaakdossier moet bewaard blijven en op de Archiefactiedatum overgedragen worden naar een archiefbewaarplaats.\n* `vernietigen` - Het zaakdossier moet op of na de Archiefactiedatum vernietigd worden."
          enum:
            - blijvend_bewaren
            - vernietigen
          nullable: true
        toelichting:
          type: string
          description: "Een toelichting op dit RESULTAATTYPE en het belang hiervan voor ZAAKen waarin een resultaat van dit RESULTAATTYPE wordt geselecteerd."
          nullable: true
        selectielijstklasse:
          type: string
          format: uri
          description: "URL-referentie naar de, voor het archiefregime bij het RESULTAATTYPE relevante, categorie in de Selectielijst Archiefbescheiden (RESULTAAT in de Selectielijst API) van de voor het ZAAKTYPE verantwoordelijke overheidsorganisatie."
          maxLength: 1000
          nullable: true
        omschrijvingGeneriek:
          type: string
          description: "Waarde van de omschrijving-generiek referentie (attribuut `omschrijving`)"
          nullable: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van resultaten van het RESULTAATTY"
          maxLength: 20
          nullable: true
        zaaktype:
          type: string
          format: uri
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object"
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    RolType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.rolType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: RolType
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - omschrijvingGeneriek
        - omschrijving
      properties:
        omschrijvingGeneriek:
          type: string
          description: "Algemeen gehanteerde omschrijving van de aard van de ROL.\n\nUitleg bij mogelijke waarden:\n\nadviseur - (Adviseur) Kennis in dienst stellen van de behandeling van (een deel van) een zaak.\nbehandelaar - (Behandelaar) De vakinhoudelijke behandeling doen van (een deel van) een zaak.\nbelanghebbende - (Belanghebbende) Vanuit eigen en objectief belang rechtstreeks betrokken zijn bij de behandeling en/of de uitkomst van een zaak.\nbeslisser - (Beslisser) Nemen van besluiten die voor de uitkomst van een zaak noodzakelijk zijn.\ninitiator - (Initiator) Aanleiding geven tot de start van een zaak ..\nklantcontacter - (Klantcontacter) Het eerste aanspreekpunt zijn voor vragen van burgers en bedrijven ..\nzaakcoordinator - (Zaakcoördinator) Er voor zorg dragen dat de behandeling van de zaak in samenhang uitgevoerd wordt conform de daarover gemaakte afspraken.\nmede_initiator - Mede-initiator"
          enum:
            - adviseur
            - behandelaar
            - belanghebbende
            - beslisser
            - initiator
            - klantcontacter
            - zaakcoordinator
            - mede_initiator
          nullable: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van de ROL."
          maxLength: 20
          nullable: true
        zaaktype:
          type: string
          format: url
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    StatusType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.statusType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: StatusType
      description: ""
      version: 0.1.0
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - volgnummer
        - omschrijving
      properties:
        informeren:
          type: boolean
          description: "Aanduiding die aangeeft of na het zetten van een STATUS van dit STATUSTYPE de Initiator moet worden geïnformeerd over de statusovergan"
          nullable: true
        isEindstatus:
          type: boolean
          description: "Geeft aan dat dit STATUSTYPE een eindstatus betreft. Dit gegeven is afgeleid uit alle STATUSTYPEn van dit ZAAKTYPE met het hoog"
          nullable: true
        volgnummer:
          type: integer
          description: "Een volgnummer voor statussen van het STATUSTYPE binnen een zaak."
          maxLength: 9999
          nullable: true
        zaaktype:
          type: string
          format: uri
          nullable: true
        statustekst:
          type: string
          description: "De tekst die wordt gebruikt om de Initiator te informeren over het bereiken van een STATUS van dit STATUSTYPE bij het desbetreffende ZAAKTY"
          nullable: true
        omschrijvingGeneriek:
          type: string
          description: "Algemeen gehanteerde omschrijving van de aard van STATUSsen van het STATUSTYPE"
          maxLength: 80
          nullable: true
        omschrijving:
          type: string
          description: "Een korte, voor de initiator van de zaak relevante, omschrijving van de aard van de STATUS van zaken van een ZAAKTYPE."
          maxLength: 80
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    ZaakType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.zaakType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakType
      description: ""
      version: 0.1.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - gerelateerdeZaaktypen
        - besluittypen
        - catalogus
        - referentieproces
        - versiedatum
        - beginGeldigheid
        - productenOfDiensten
        - publicatieIndicatie
        - verlengingMogelijk
        - opschortingEnAanhoudingMogelijk
        - doorlooptijd
        - handelingBehandelaar
        - onderwerp
        - handelingInitiator
        - indicatieInternOfExtern
        - aanleiding
        - doel
        - vertrouwelijkheidaanduiding
        - omschrijving
        - identificatie
      properties:
        gerelateerdeZaaktypen:
          _list: "/admin/objects?_self.schema.id=576e405d-1174-4316-9d90-57a58b48cb61"
          type: object
          format: url
          description: "De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE."
          nullable: true
          multiple: true
        besluittypen:
          _list: "/admin/objects?_self.schema.id=8038a751-3d42-410c-8f40-3e0020148f56"
          type: object
          format: url
          description: "URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen dit ZAAKTYPE."
          nullable: true
          multiple: true
        roltypen:
          _list: "/admin/objects?_self.schema.id=89265182-6c9d-4826-a74c-f3fca87d4d86"
          type: object
          format: url
          description: "URL-referenties naar de ROLTYPEN die mogelijk zijn binnen dit ZAAKTYPE."
          nullable: true
          multiple: true
        informatieobjecttypen:
          _list: "/admin/objects?_self.schema.id=369688bb-ac27-46f0-bd7c-ff1b6290224c"
          type: object
          format: url
          description: "URL-referenties naar de INFORMATIEOBJECTTYPEN die mogelijk zijn binnen dit ZAAKTYPE."
          nullable: true
          multiple: true
        eigenschappen:
          _list: "/admin/objects?_self.schema.id=fa97bfba-4c00-4536-a2d6-980f646dedc4"
          type: object
          format: url
          description: "URL-referenties naar de EIGENSCHAPPEN die aanwezig moeten zijn in ZAKEN van dit ZAAKTYPE."
          nullable: true
          multiple: true
        resultaattypen:
          _list: "/admin/objects?_self.schema.id=2560caf0-37d7-4e42-8269-84722a7a6b4a"
          type: object
          format: url
          description: "URL-referenties naar de RESULTAATTYPEN die mogelijk zijn binnen dit ZAAKTYPE."
          nullable: true
          multiple: true
        statustypen:
          _list: "/admin/objects?_self.schema.id=472e0865-25db-46e3-9887-d9da812ff340"
          type: object
          description: "URL-referenties naar de STATUSTYPEN die mogelijk zijn binnen dit ZAAKTYPE."
          nullable: true
          multiple: true
        catalogus:
          _list: "/admin/objects?_self.schema.id=3e4ea720-32f6-4850-852f-b6695f21bf08"
          type: object
          format: url
          nullable: true
        referentieproces:
          _list: "/admin/objects?_self.schema.id=6fa2a84c-3bd0-4153-b5a8-0c828bc46334"
          type: object
          format: url
          nullable: true
        concept:
          type: boolean
          description: "Geeft aan of het object een concept betreft. Concepten zijn niet-definitieve versies en zouden niet gebruikt moeten worden buiten deze API."
          nullable: true
          readOnly: true
        versiedatum:
          type: string
          format: date
          description: "De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE geldig zijn geworden"
          nullable: true
        eindeGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is opgeheven."
          nullable: true
        beginGeldigheid:
          type: string
          format: date
          description: "De datum waarop het is ontstaan."
          nullable: true
        selectielijstProcestype:
          type: string
          format: uri
          description: "URL-referentie naar een vanuit archiveringsoptiek onderkende groep processen met dezelfde kenmerken (PROCESTYPE in de Selectielijst API)."
          maxLength: 200
          nullable: true
        productenOfDiensten:
          type: array
          description: "Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt voortgebracht."
          nullable: true
        verantwoordingsrelatie:
          type: array
          description: "De relatie tussen ZAAKen van dit ZAAKTYPE en de beleidsmatige en/of financiële verantwoording."
          nullable: true
        publicatietekst:
          type: string
          description: "De generieke tekst van de publicatie van ZAAKen van dit ZAAKTYPE."
          nullable: true
        publicatieIndicatie:
          type: boolean
          description: "Aanduiding of (het starten van) een ZAAK dit ZAAKTYPE gepubliceerd moet worden."
          nullable: true
        trefwoorden:
          type: array
          description: "Een trefwoord waarmee ZAAKen van het ZAAKTYPE kunnen worden gekarakteriseerd."
          nullable: true
        verlengingstermijn:
          type: string
          format: duration
          description: "De termijn in dagen waarmee de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd. Mag alleen een waarde bevatten als verlenging mogelijk is."
          nullable: true
        verlengingMogelijk:
          type: boolean
          description: "Aanduiding die aangeeft of de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd."
          nullable: true
        opschortingEnAanhoudingMogelijk:
          type: boolean
          description: "Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE kunnen worden opgeschort en/of aangehouden."
          nullable: true
        servicenorm:
          type: string
          format: duration
          description: "De periode waarbinnen verwacht wordt dat een ZAAK van het ZAAKTYPE afgerond wordt conform de geldende servicenormen van de zaakbehandelende organisatie(s)."
          nullable: true
        doorlooptijd:
          type: string
          format: duration
          description: "De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn, in kalenderdagen."
          nullable: true
        handelingBehandelaar:
          type: string
          description: "Werkwoord dat hoort bij de handeling die de behandelaar verricht bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren', 'vaststellen' of 'onderhouden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_behandelaar"
          maxLength: 20
          nullable: true
        onderwerp:
          type: string
          description: "Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus (PDC). Bijvoorbeeld: 'Evenementenvergunning', 'Geboorte', 'Klacht'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.onderwerp"
          maxLength: 80
          nullable: true
        handelingInitiator:
          type: string
          description: "Werkwoord dat hoort bij de handeling die de initiator verricht bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_initiator"
          maxLength: 20
          nullable: true
        indicatieInternOfExtern:
          type: string
          description: "Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn die Intern respectievelijk Extern geïnitieerd worden. Indien van beide sprake kan zijn, dan prevaleert de externe initiatie.\n\nUitleg bij mogelijke waarden:\n\n* `inkomend` - Inkomend\n* `intern` - Intern\n* `uitgaand` - Uitgaand"
          enum:
            - intern
            - extern
          nullable: true
        toelichting:
          type: string
          description: "Een eventuele toelichting op dit zaaktype, zoals een beschrijving van het procesverloop op de hoofdlijnen."
          nullable: true
        aanleiding:
          type: string
          description: "Een omschrijving van de gebeurtenis die leidt tot het starten van een ZAAK van dit ZAAKTYPE."
          nullable: true
        doel:
          type: string
          description: "Een omschrijving van hetgeen beoogd is te bereiken met een zaak van dit zaaktype."
          nullable: true
        vertrouwelijkheidaanduiding:
          type: string
          description: "Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde gezet.\n\nUitleg bij mogelijke waarden:\n\n* `openbaar` - Openbaar\n* `beperkt_openbaar` - Beperkt openbaar\n* `intern` - Intern\n* `zaakvertrouwelijk` - Zaakvertrouwelijk\n* `vertrouwelijk` - Vertrouwelijk\n* `confidentieel` - Confidentieel\n* `geheim` - Geheim\n* `zeer_geheim` - Zeer geheim"
          enum:
            - openbaar
            - beperkt_openbaar
            - intern
            - zaakvertrouwelijk
            - vertrouwelijk
            - confidentieel
            - geheim
            - zeer_geheim
          nullable: true
        omschrijvingGeneriek:
          type: string
          description: "Algemeen gehanteerde omschrijving van de aard van ZAAKen van het ZAAKTYPE"
          maxLength: 80
          nullable: true
        omschrijving:
          type: string
          description: "Omschrijving van de aard van ZAAKen van het ZAAKTYPE."
          maxLength: 80
          nullable: true
        identificatie:
          type: string
          description: "Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin het ZAAKTYPE voorkomt."
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    ZaakTypeInformatieObjectType:
      $id: "https://vng.opencatalogi.nl/schemas/ztc.zaakTypeInformatieObjectType.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ZaakTypeInformatieObjectType
      description: ""
      version: "0.1"
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - zaaktype
        - informatieobjecttype
        - volgnummer
        - richting
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        zaaktype:
          type: string
          format: uri
          description: "URL-referentie naar het ZAAKTYPE."
          nullable: true
        informatieobjecttype:
          type: string
          format: uri
          description: "URL-referentie naar het INFORMATIEOBJECTTYPE."
          nullable: true
        volgnummer:
          type: integer
          description: "Uniek volgnummer van het ZAAK-INFORMATIEOBJECTTYPE binnen het ZAAKTYPE."
          nullable: true
        richting:
          type: string
          description: "Aanduiding van de richting van informatieobjecten van het gerelateerde INFORMATIEOBJECTTYPE bij zaken van het gerelateerde ZAAKTYPE.\n\nUitleg bij mogelijke waarden:\n\n* `inkomend` - Inkomend\n* `intern` - Intern\n* `uitgaand` - Uitgaand"
          enum:
            - inkomend
            - intern
            - uitgaand
          nullable: true
        statustype:
          type: string
          format: uri
          description: "URL-referentie naar het STATUSTYPE waarbij deze INFORMATIEOBJECTTYPEn verplicht aanwezig moeten zijn."
          nullable: true
      type: object
    Besluit:
      $id: "https://vng.opencatalogi.nl/schemas/brc.besluit.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Besluit
      description: ""
      version: null
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - verantwoordelijkeOrganisatie
        - besluittype
        - datum
        - ingangsdatum
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        identificatie:
          type: string
          description: "Identificatie van het besluit binnen de organisatie die het besluit heeft vastgesteld. Indien deze niet opgegeven is, dan wordt die gegenereerd."
          maxLength: 50
          nullable: true
        verantwoordelijkeOrganisatie:
          type: string
          description: "Het RSIN van de niet-natuurlijk persoon zijnde de organisatie die het besluit heeft vastgesteld."
          maxLength: 9
          nullable: true
        besluittype:
          type: string
          format: uri
          description: "URL-referentie naar het BESLUITTYPE (in de Catalogi API)."
          maxLength: 200
          nullable: true
        zaak:
          type: string
          format: uri
          description: "URL-referentie naar de ZAAK (in de Zaken API) waarvan dit besluit uitkomst is."
          maxLength: 200
          nullable: true
        datum:
          type: string
          format: date
          description: "De beslisdatum (AWB) van het besluit."
          nullable: true
        toelichting:
          type: string
          description: "Toelichting bij het besluit."
          nullable: true
        bestuursorgaan:
          type: string
          description: "Een orgaan van een rechtspersoon krachtens publiekrecht ingesteld of een persoon of college, met enig openbaar gezag bekleed onder wiens verantwoordelijkheid het besluit vastgesteld is."
          maxLength: 50
          nullable: true
        ingangsdatum:
          type: string
          format: date
          description: "Ingangsdatum van de werkingsperiode van het besluit."
          nullable: true
        vervaldatum:
          type: string
          format: date
          description: "Datum waarop de werkingsperiode van het besluit eindigt."
          nullable: true
        vervalreden:
          type: string
          description: "De omschrijving die aangeeft op grond waarvan het besluit is of komt te vervallen.\n\nUitleg bij mogelijke waarden:\n\n* `tijdelijk` - Besluit met tijdelijke werking\n* `ingetrokken_overheid` - Besluit ingetrokken door overheid\n* `ingetrokken_belanghebbende` - Besluit ingetrokken o.v.v. belanghebbende"
          enum:
            - tijdelijk
            - ingetrokken_overheid
            - ingetrokken_belanghebbende
          nullable: true
        vervalredenWeergave:
          type: string
          nullable: true
          readOnly: true
        publicatiedatum:
          type: string
          format: date
          description: "Datum waarop het besluit gepubliceerd wordt."
          nullable: true
        verzenddatum:
          type: string
          format: date
          description: "Datum waarop het besluit verzonden is."
          nullable: true
        uiterlijkeReactiedatum:
          type: string
          format: date
          description: "De datum tot wanneer verweer tegen het besluit mogelijk is."
          nullable: true
      type: object
    BesluitInformatieObject:
      $id: "https://vng.opencatalogi.nl/schemas/brc.besluitInformatieObject.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: BesluitInformatieObject
      description: ""
      version: 0.0.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - informatieobject
        - besluit
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        informatieobject:
          _list: "/admin/objects?_self.schema.id=60ecdfc3-ab0a-4294-9c91-36c90c4423a3"
          type: object
          format: url
          description: "URL-referentie naar het INFORMATIEOBJECT (in de Documenten API) waarin (een deel van) het besluit beschreven is."
          maxLength: 1000
          nullable: true
        besluit:
          _list: "/admin/objects?_self.schema.id=1928f56e-3fbc-4bec-931a-3b5b0ef587a4"
          type: object
          format: url
          description: "URL-referentie naar het BESLUIT."
          nullable: true
      type: object
    EnkelvoudigInformatieObject:
      $id: "https://vng.opencatalogi.nl/schemas/drc.enkelvoudigInformatieObject.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: EnkelvoudigInformatieObject
      description: "Serializer for the EnkelvoudigInformatieObject model"
      version: null
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - bestandsdelen
        - locked
        - informatieobjecttype
        - beginRegistratie
        - versie
        - taal
        - auteur
        - titel
        - creatiedatum
        - bronorganisatie
        - url
      properties:
        bestandsdelen:
          _list: "/admin/objects?_self.schema.id=8a8d7dcc-6365-4285-86c1-4b043b9eeaea"
          type: object
          nullable: true
          multiple: true
          readOnly: true
        locked:
          type: boolean
          description: "Geeft aan of het document gelocked is. Alleen als een document gelocked is, mogen er aanpassingen gemaakt worden."
          nullable: true
          readOnly: true
        informatieobjecttype:
          type: string
          format: uri
          description: "URL-referentie naar het INFORMATIEOBJECTTYPE (in de Catalogi API)."
          maxLength: 200
          nullable: true
        integriteit:
          type: string
          description: "Uitdrukking van mate van volledigheid en onbeschadigd zijn van digitaal bestand."
          nullable: true
        ondertekening:
          type: string
          description: "Aanduiding van de rechtskracht van een informatieobject. Mag niet van een waarde zijn voorzien als de `status` de waarde 'in bewerking' of 'ter vaststelling' heeft."
          nullable: true
        verschijningsvorm:
          type: string
          description: "De essentiële opmaakaspecten van een INFORMATIEOBJECT."
          nullable: true
        indicatieGebruiksrecht:
          type: boolean
          description: "Indicatie of er beperkingen gelden aangaande het gebruik van het informatieobject anders dan raadpleging. Dit veld mag `null` zijn om aan te geven dat de indicatie nog niet bekend is. Als de indicatie gezet is, dan kan je de gebruiksrechten die van toepassing zijn raadplegen via de GEBRUIKSRECHTen resource."
          nullable: true
        verzenddatum:
          type: string
          format: date
          description: "De datum waarop het INFORMATIEOBJECT verzonden is, zoals deze op het INFORMATIEOBJECT vermeld is. Dit geldt voor zowel inkomende als uitgaande INFORMATIEOBJECTen. Eenzelfde informatieobject kan niet tegelijk inkomend en uitgaand zijn. Ontvangst en verzending is voorbehouden aan documenten die van of naar andere personen ontvangen of verzonden zijn waarbij die personen niet deel uit maken van de behandeling van de zaak waarin het document een rol speelt."
          nullable: true
        ontvangstdatum:
          type: string
          format: date
          description: "De datum waarop het INFORMATIEOBJECT ontvangen is. Verplicht te registreren voor INFORMATIEOBJECTen die van buiten de zaakbehandelende organisatie(s) ontvangen zijn. Ontvangst en verzending is voorbehouden aan documenten die van of naar andere personen ontvangen of verzonden zijn waarbij die personen niet deel uit maken van de behandeling van de zaak waarin het document een rol speelt."
          nullable: true
        beschrijving:
          type: string
          description: "Een generieke beschrijving van de inhoud van het INFORMATIEOBJECT."
          maxLength: 1000
          nullable: true
        link:
          type: string
          format: uri
          description: "De URL waarmee de inhoud van het INFORMATIEOBJECT op te vragen is."
          maxLength: 200
          nullable: true
        bestandsomvang:
          type: integer
          format: int64
          description: "Aantal bytes dat de inhoud van INFORMATIEOBJECT in beslag neemt."
          nullable: true
        inhoud:
          type: string
          format: uri
          description: "Download URL van de binaire inhoud."
          nullable: true
        bestandsnaam:
          type: string
          description: "De naam van het fysieke bestand waarin de inhoud van het informatieobject is vastgelegd, inclusief extensie."
          maxLength: 255
          nullable: true
        beginRegistratie:
          type: string
          format: date-time
          description: "Een datumtijd in ISO8601 formaat waarop deze versie van het INFORMATIEOBJECT is aangemaakt of gewijzigd."
          nullable: true
          readOnly: true
        versie:
          type: integer
          description: "Het (automatische) versienummer van het INFORMATIEOBJECT. Deze begint bij 1 als het INFORMATIEOBJECT aangemaakt wordt."
          nullable: true
          readOnly: true
        taal:
          type: string
          description: "Een ISO 639-2/B taalcode waarin de inhoud van het INFORMATIEOBJECT is vastgelegd. Voorbeeld: `dut`. Zie: https://www.iso.org/standard/4767.html"
          maxLength: 3
          nullable: true
        formaat:
          type: string
          description: 'Het "Media Type" (voorheen "MIME type") voor de wijze waaropde inhoud van het INFORMATIEOBJECT is vastgelegd in een computerbestand. Voorbeeld: `application/msword`. Zie: https://www.iana.org/assignments/media-types/media-types.xhtml'
          maxLength: 255
          nullable: true
        status:
          type: string
          description: "Aanduiding van de stand van zaken van een INFORMATIEOBJECT. De waarden 'in bewerking' en 'ter vaststelling' komen niet voor als het attribuut `ontvangstdatum` van een waarde is voorzien. Wijziging van de Status in 'gearchiveerd' impliceert dat het informatieobject een duurzaam, niet-wijzigbaar Formaat dient te hebben.\n\nUitleg bij mogelijke waarden:\n\n* `in_bewerking` - (In bewerking) Aan het informatieobject wordt nog gewerkt.\n* `ter_vaststelling` - (Ter vaststelling) Informatieobject gereed maar moet nog vastgesteld worden.\n* `definitief` - (Definitief) Informatieobject door bevoegd iets of iemand vastgesteld dan wel ontvangen.\n* `gearchiveerd` - (Gearchiveerd) Informatieobject duurzaam bewaarbaar gemaakt; een gearchiveerd informatie-element."
          nullable: true
        auteur:
          type: string
          description: "De persoon of organisatie die in de eerste plaats verantwoordelijk is voor het creëren van de inhoud van het INFORMATIEOBJECT."
          maxLength: 200
          nullable: true
        vertrouwelijkheidaanduiding:
          type: string
          description: "Aanduiding van de mate waarin het INFORMATIEOBJECT voor de openbaarheid bestemd is.\n\nUitleg bij mogelijke waarden:\n\n* `openbaar` - Openbaar\n* `beperkt_openbaar` - Beperkt openbaar\n* `intern` - Intern\n* `zaakvertrouwelijk` - Zaakvertrouwelijk\n* `vertrouwelijk` - Vertrouwelijk\n* `confidentieel` - Confidentieel\n* `geheim` - Geheim\n* `zeer_geheim` - Zeer geheim"
          nullable: true
        titel:
          type: string
          description: "De naam waaronder het INFORMATIEOBJECT formeel bekend is."
          maxLength: 200
          nullable: true
        creatiedatum:
          type: string
          format: date
          description: "Een datum of een gebeurtenis in de levenscyclus van het INFORMATIEOBJECT."
          nullable: true
        bronorganisatie:
          type: string
          description: "Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die het informatieobject heeft gecreëerd of heeft ontvangen en als eerste in een samenwerkingsketen heeft vastgelegd."
          maxLength: 9
          nullable: true
        identificatie:
          type: string
          description: "Een binnen een gegeven context ondubbelzinnige referentie naar het INFORMATIEOBJECT."
          maxLength: 40
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        id:
          type: string
          format: uuid
          nullable: true
      type: object
    Gebruiksrecht:
      $id: "https://vng.opencatalogi.nl/schemas/drc.gebruiksrecht.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Gebruiksrecht
      description: ""
      version: 0.0.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - url
        - startdatum
        - omschrijvingVoorwaarden
        - informatieobject
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        startdatum:
          type: string
          format: date-time
          description: "Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn. Doorgaans is de datum van creatie van het informatieobject de startdatum."
          nullable: true
        einddatum:
          type: string
          format: date-time
          description: "Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn."
          nullable: true
        omschrijvingVoorwaarden:
          type: string
          description: "Omschrijving van de van toepassing zijnde voorwaarden aan het gebruik anders dan raadpleging"
          nullable: true
        informatieobject:
          _list: "/admin/objects?_self.schema.id=60ecdfc3-ab0a-4294-9c91-36c90c4423a3"
          type: object
          format: url
          description: "URL-referentie naar het INFORMATIEOBJECT."
          nullable: true
      type: object
    ObjectInformatieObject:
      $id: "https://vng.opencatalogi.nl/schemas/drc.objectInformatieObject.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: ObjectInformatieObject
      description: ""
      version: 0.0.1
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - url
        - object
        - objectType
        - informatieobject
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        object:
          type: string
          format: uri
          description: "URL-referentie naar het gerelateerde OBJECT (in deze of een andere API)."
          maxLength: 1000
          nullable: true
        objectType:
          type: string
          description: "Het type van het gerelateerde OBJECT.\n\nUitleg bij mogelijke waarden:\n\n* `besluit` - Besluit\n* `zaak` - Zaak"
          nullable: true
        informatieobject:
          _list: "/admin/objects?_self.schema.id=60ecdfc3-ab0a-4294-9c91-36c90c4423a3"
          type: object
          format: url
          description: "URL-referentie naar het INFORMATIEOBJECT."
          nullable: true
      type: object
    BestandsDeel:
      $id: "https://vng.opencatalogi.nl/schemas/drc.bestandsDeel.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: BestandsDeel
      description: ""
      version: null
      exclude: false
      maxDepth: 3
      nameProperties: {}
      required:
        - url
        - volgnummer
        - omvang
        - voltooid
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        volgnummer:
          type: integer
          description: "Een volgnummer dat de volgorde van de bestandsdelen aangeeft."
          nullable: true
          readOnly: true
        omvang:
          type: integer
          description: "De grootte van dit specifieke bestandsdeel."
          nullable: true
          readOnly: true
        voltooid:
          type: boolean
          description: "Indicatie of dit bestandsdeel volledig is geupload. Dat wil zeggen: het aantal bytes dat staat genoemd bij grootte is daadwerkelijk ontvangen."
          nullable: true
          readOnly: true
      type: object
    Verzending:
      $id: "https://vng.opencatalogi.nl/schemas/drc.verzending.schema.json"
      $schema: "https://docs.commongateway.nl/schemas/Entity.schema.json"
      title: Verzending
      description: "Set gegevensgroepdata from validated nested data.\n\nUsage: include the mixin on the ModelSerializer that has gegevensgroepen."
      version: null
      exclude: false
      maxDepth: 3
      nameProperties: {}
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        url:
          type: string
          format: uri
          description: "URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object."
          maxLength: 1000
          nullable: true
          readOnly: true
        betrokkene:
          type: string
          format: uri
          description: "URL-referentie naar de betrokkene waarvan het informatieobject is ontvangen of waaraan dit is verzonden."
          maxLength: 200
          nullable: true
        informatieobject:
          type: string
          format: uri
          description: "URL-referentie naar het informatieobject dat is ontvangen of verzonden."
          nullable: true
        aardRelatie:
          type: string
          description: "Omschrijving van de aard van de relatie van de BETROKKENE tot het INFORMATIEOBJECT."
          nullable: true
        toelichting:
          type: string
          description: "Verduidelijking van de afzender- of geadresseerde-relatie."
          maxLength: 200
          nullable: true
        ontvangstdatum:
          type: string
          format: date
          description: "De datum waarop het INFORMATIEOBJECT ontvangen is. Verplicht te registreren voor INFORMATIEOBJECTen die van buiten de zaakbehandelende organisatie(s) ontvangen zijn. Ontvangst en verzending is voorbehouden aan documenten die van of naar andere personen ontvangen of verzonden zijn waarbij die personen niet deel uit maken van de behandeling van de zaak waarin het document een rol speelt. Vervangt het gelijknamige attribuut uit Informatieobject. Verplicht gevuld wanneer aardRelatie de waarde 'afzender' heeft."
          nullable: true
        verzenddatum:
          type: string
          format: date
          description: "De datum waarop het INFORMATIEOBJECT verzonden is, zoals deze op het INFORMATIEOBJECT vermeld is. Dit geldt voor zowel inkomende als uitgaande INFORMATIEOBJECTen. Eenzelfde informatieobject kan niet tegelijk inkomend en uitgaand zijn. Ontvangst en verzending is voorbehouden aan documenten die van of naar andere personen ontvangen of verzonden zijn waarbij die personen niet deel uit maken van de behandeling van de zaak waarin het document een rol speelt. Vervangt het gelijknamige attribuut uit Informatieobject. Verplicht gevuld wanneer aardRelatie de waarde 'geadresseerde' heeft."
          nullable: true
        contactPersoon:
          type: string
          format: uri
          description: "URL-referentie naar de persoon die als aanspreekpunt fungeert voor de BETROKKENE inzake het ontvangen of verzonden INFORMATIEOBJECT."
          maxLength: 1000
          nullable: true
        contactpersoonnaam:
          type: string
          description: "De opgemaakte naam van de persoon die als aanspreekpunt fungeert voorde BETROKKENE inzake het ontvangen of verzonden INFORMATIEOBJECT."
          maxLength: 40
          nullable: true
        binnenlandsCorrespondentieadres:
          type: string
          description: "Het correspondentieadres, betreffende een adresseerbaar object, van de BETROKKENE, zijnde afzender of geadresseerde, zoals vermeld in het ontvangen of verzonden INFORMATIEOBJECT indien dat afwijkt van het reguliere binnenlandse correspondentieadres van BETROKKENE."
          nullable: true
        buitenlandsCorrespondentieadres:
          type: string
          description: "De gegevens van het adres in het buitenland van BETROKKENE, zijnde afzender of geadresseerde, zoals vermeld in het ontvangen of verzonden INFORMATIEOBJECT en dat afwijkt van de reguliere correspondentiegegevens van BETROKKENE."
          nullable: true
        correspondentiePostadres:
          type: string
          description: "De gegevens die tezamen een postbusadres of antwoordnummeradres vormen van BETROKKENE, zijnde afzender of geadresseerde, zoals vermeld in het ontvangen of verzonden INFORMATIEOBJECT en dat afwijkt van de reguliere correspondentiegegevens van BETROKKENE."
          nullable: true
        faxnummer:
          type: string
          description: "Faxnummer van de afzender."
          maxLength: 15
          nullable: true
        emailadres:
          type: string
          description: "emailadres van de afzender."
          maxLength: 100
          nullable: true
        mijnOverheid:
          type: boolean
          description: "mijnOverheid van de afzender."
          nullable: true
      type: object
  requestBodies: {}
security: {}
tags: {}
